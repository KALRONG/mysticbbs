
 ! Mystic now clears the temporary directory after each mass uploaded file,
   just in case a second .DIZ is in an archive.

 + The FS editor DRAW mode now has an Upload ANSI option added to the menu.

 ! Fixed a small bug when ANSI was posted into a NON-ANSI base that could
   cause the converted ASCII to get distorted.

 + When generating quote data, Mystic will no longer wrap the first line into
   the second line if the line is a KLUDGE line.

 + New MUTIL option for [ExportEchomail] entitled "skip_online". If this value
   is set to true, Mystic will not toss new messages posted by them if they
   are currently logged into the BBS.  Combined with "create semaphores at
   logout", this should give users their entire time logged in to edit their
   messages before they'll be sent, even if other users create semaphores.

 ! I accidentally compiled Mystic with a 1000 line message limit.  It has been
   changed to 10,000 lines per message now.

 + Mystic now fully supports unlimited reply tracking, using reply first,
   reply next, and reply to for each message.  This carries over to the
   echomail linking and message base purging/packing as well.

 ! Fixed a bug which could cause NodeSpy's snooping sessions to abruptly end
   in Windows.

 + The CL mci code (clear screen) and any other function based clear screens
   done by Mystic will now send ESC[H to home the cursor before the 2J for
   better compatibility with non ANSI-BBS terminals.

 + Mystic now has internal Xmodem (1K/CRC), Ymodem, Ymodem-G to go along with
   the existing Zmodem protocol.  Similarly to Zmodem, they are configured
   in the protocol editor with the following send/receive commands:

      @xmodem
      @ymodem
      @ymodemg

   A new protocol.dat has been included with the default installation that
   has these new protocols added, so it can be copied over the old
   protocol.dat if you haven't made changes specific to your system.

 + Increased the speed of statistic calculation in Nodespy significantly.

 + Character input within the configuration editors now allows characters
   to be input by the ASCII number or the key itself.

 + Revamped the Login/Matrix settings in the configuration, moving some
   options that were in General that probably made more sense in Login
   options.

 + Mystic can now send client terminals either CP437 or UTF8 data output,
   converting relevant outbound data to UTF8 when selected.  For compatibility
   reasons, data still has to be stored in CP437 encoding within Mystic itself

 + Mystic now has two new options in the Login configuration which go along
   with the UTF8 encoding:

   Default CodePage
   Ask CodePage

   ** READ THIS:
   If you do not understand what these are, set Default to CP437 and
   Ask CodePage to "Detect".  What this basically does is allows users to use
   things like Putty to connect to your BBS, and everything should look and
   work as expected.

   When Mystic starts up, by default a user will have the configured "Default"
   code page.  Then depending on the setting of "Ask CodePage", Mystic will do
   one of the following:

      Detect : Mystic only changes codepage from default if it is able
               to detect a terminal that is likely NOT the default, but the
               user is never prompted.
      Ask    : Mystic will ask the user which Codepage they would like
               to use after detecting ANSI.
      CP437  : Codepage will always be set to MS-DOS (CP437)
      UTF8   : Codepage will always be set to UTF8

   In Linux, the Default code page will actually be what Mystic runs in
   when you run mystic from the command line, too.  In Windows, the Sysop
   side will always execute in CP437, even when a user is logged in that
   has UTF8 enabled (the user of course will still get sent UTF8).

   One other consideration, is that many terminals that use UTF8 are using
   VT102 instead of ANSI-BBS, which means a few things are different - most
   noticably are ANSI clear screen codes.  In ANSI-BBS, the clear screen also
   moves the cursor to 1,1, while in VT102 it does not.  This means its best
   to edit your ANSIs and add a |CL at the very top so Mystic clears the
   screen in a compatible way.

 + When a user selects UTF8 encoding, Mystic will now assume their terminal
   sends VT102 DELETE/BACKSPACE keys rather than the MS-DOS terminal behavior.

 + MUTIL now has a function called to pack and check integrity of file bases,
   and a new header in MUTIL called [PackFileBases] has been added.  Please
   see the default MUTIL.INI in the new installation for more information.

   The old broken filepack in MBBSUTIL is gone now.

 + Mystic now prompts for confirmation when using the (U)pdate DIZ command
   from the file directory listing, to lessen the change that a SysOp injects
   a new .DIZ into an archive without meaning to.

 + New options for the GD "Display a file" menu command.  The old optional
   data where just the filename is supplied continues to work, but now if
   the first character is @ it will expect a few options in the following
   format:

      Format #1: filename
      Format #2: @baudrate@true/false/end@filename

   The @baudrate field specifies the baud rate to display the file.

   The second field defines how file pauses should work.  If set to TRUE
   the file will pause.  If set to false it will not pause.  If set to END
   then it will only pause after displaying the file.

   The final @filename is just the same as the format #1

   For example:
     @38400@end@bogacid1.ans

   The above would display JEDs 250kb ANSImation at 38400 baud, with no
   pauses except for one at the end.

 + New option in Login/Matrix settings: "Login after Apply".  If set to Yes
   Mystic will automatically send the user to the login after they apply for
   a new account through the Matrix.

 + PYTHON is here!  New menu command 'GY' will execute a Python 2.7 syntax
   script.  By default Mystic looks in the script directory for .MPY files,
   using the same logic as MPX.  If you supply a file with no extention,
   Mystic will add .mpy onto it.  If you do not supply a path, then Mystic
   will look in the current theme's script directory, and then the default
   script directory if fallback is enabled.

      Example:

         Command: GY
            Data: testpython

      The above executes testpython.mpy from the Scripts directory

      Example:

         Command: GY
            Data: c:\mystic\derp\herpderp

      The above executes herderp.mpy from the c:\mystic\derp directory, or
      if it is not found and fallback is enabled for the current theme, Mystic
      will look in the default scripts directory.

 + MUTIL now doesn't completely crap out if it does not have access to the
   files it needs on startup in Linux.

 + Mystic is now compiled with FPC 3.0.0 in Windows and Linux!

 ! The /TO: option when posting a new message in a public base was still
   presenting the TO field.

   <ALPHA 1.12 A1 RELEASED -- Feb 9, 2016>

 ! Mystic will not crash when skip_online is set to false during echomail
   tossing.

 ! Added the forgotten prompt 315 to the default prompts

 + Moved the Python intialization code to only execute the first time a
   script is ran, so that if Python is incorrectly installed it will not
   prevent Mystic from loading with an error.

   If you get a "Import error: no module named site" when you DO try to
   execute a Python script, its because you have Python on your system but
   it is not completely installed.  You'll need to set your environment
   variables.  For example if you have Python installed in C:\Python27:

     SET PYTHONHOME=C:\PYTHON27
     SET PYTHONPATH=C:\PYTHON27\LIB
     SET PATH=%PYTHONHOME%;%PATH%

 - Removed the -FCHECK command from MBBSUTIL since MUTIL's file pack
   function now covers the same stuff while it packs bases.

 - Squish message bases have now been removed.  They were never used and
   supporting two aging standards was a waste of time, and annoying.  Now
   that its gone, expect additional polish on the JAM side.

 + MUTIL now has a new function [LinkMessages].  This scours your echomail
   bases and creates reply links between messages.  See MUTIL.INI for more
   details and options (I may be rewriting the msgbase packer too)

 + Message header prompts and display files now have a &A display code
   which returns the "Reply Next" field.

 + A2 will be compiled with increased compiler optimizations to see if
   there are any negative effects.

 + Prompts beginning with a # will now execute a Python script similar to
   MPL and display files:

      @myansi     <- Shows myansi from your theme's text dir
      !mympl      <- Execute mympl.mpx from theme's script dir
      #mypython   <- Execute mypython.mpy from theme's script dir

   In the small case that you ever need to start a prompt with one of
   these characters, you can prefix it with the "dummy" MCI code <pipe>XX

 + DOCS section now has a fully updated mci_display_codes.txt with all
   current codes documented!

 + Mystic now shows a "there are no files in this base" message when a user
   lists files in a base which HAS files, but none that are accessible to
   them.

   <ALPHA 1.12 A2 RELEASED -- Feb 11, 2016>

 + Mystic's menus now generate unique IDs for each menu item, rather than
   referencing by the record order.  This makes using Grid menus MUCH more
   feasible.  When they are loaded and saved for the first time in the menu
   editor they will automatically "upgrade" themselves, so there is no need
   for conversion.

 + Mystic's message reader and FS editor can now handle WWIV, Synchronet,
   PCBoard, Wildcat color codes in addition to the already supported pipe
   and full blown ANSI.

 + Increased max menu items to 99 per menu with 25 commands per item.

 + The Theme editor now has an option to edit menus within the theme. This
   is just an alternative place to find the menu editor.

 + Changed /F Flags inside the menu editor to less confusing /S Settings

 + File base configurations now have a Hatch ACS value to determine who has
   the ability to hatch files from that file base.

 + Message base editor now warns you if you set a QWK network for a message
   base, but then do not set the conference ID.

 + Significantly increased JAM lastread performance on systems with more
   than 100 users.

 + MUTIL msgpack now handles JAM's ReplyNext field when packing.

 + Last read pointers are now stored by the user's permanent index.

 + acs_comment field in MUTIL FILEBONE and FILETOSS have changed to acs_hatch
   so update your .INI files if you use these and want to set hatch ACS in
   those situations.

 + When receiving a node message you can now request to chat with the person
   who sent the message.  Updated prompt 145.  Note the first two characters
   are the characters used in the prompt followed by a space and then the
   text:

      ; Message from another node footer. First word contains input keys, followed by prompt
      145 RC |CR|09Node Message: |01[|10R|01]|09eply, |01[|10C|01]|09hat, or |01[|10ENTER|01/|10Continue|01]|09: |15

 + When editing message text, Mystic will now not resolve color codes so they
   are not lost when converting from ANSI to ASCII stripping colors.  This
   should fix up losing the colors in your signautures if you edit messages

 + Reworked Protocol configuration.  There no longer needs to be a Protocol
   entry for both a Batch and non-batch version of a protocol.  Instead the
   Batch flag specifies if it is a batch protocol or not.  New PROTOCOL.DAT

 + Uploading a message to the FS editor no longer annoyingly asks for a
   filename, unless a Protocol is selected that would require it, or you are
   uploading a file from the local disk.

 + Reworked the file upload function so that it never asks for filenames
   unless it absolutely has to.  The transfer protocol is now the first
   question if a default is not set, followed by the filenames if needed.
   Gone is the display file BLINDUL. Gone is "Blind Upload?" prompt #375

 + Mystic now prompts for ENTER just before a transfer begins, and allows
   an option to abort here.  This was done to give users an option to abort
   if they have a default protocol set.  Replace the old prompt with the
   new one:

      ; Press ENTER to start file transfer  &1=selected protocol
      ; First word is input chars, followed by display text
      065 SQ |CR|09Press |01[|15ENTER|01/|15S|01]|09tart or |01[|15ESCAPE|01/|15Q|01]|09uit your |15|&1 |09transfer: |XX

 + The Upload Base settings in the File Base Settings now uses the File
   base permanent index instead of the record position.  If you use this
   setting you should double check that yours is correct after upgrading.

 + Message and File groups now have unique identifiers associated to them.

 + Mystic's lightbar menus now automatically work with mouse input when
   using a compatible terminal

 + All configuration editors now list everything by unique ID instead of
   record position

 + Cleaned up the remote mouse support in the system configuration so it
   should work much better now in the main pulldown menu.

 + Added a new record-size aware and automatically buffered file I/O class to
   MPL with the following functions:

     FileOpen
     FileEOF
     FileRead
     FileSeek
     FilePos
     FileSize
     FileWrite
     FileWriteBlock
     FileRead
     FileReadBlock
     FileClose

 + Compiled MPL programs greater than 16KB should now run faster, while
   smaller MPL programs should use less memory.

 + When passing -X to execute MPL from command line, Mystic will now longer
   replace _ with spaces in the filenames.  Instead it is expected that you
   use quotations around the arguement if it has spaces.

 + MPL now allows embedded records!!!  For example:

     Type
       Record1 = Record
         A : Byte;
       End;

     Type
       Record2 = Record
         A : Record1;
       End;

     Var
       Test : Record2;
     Begin
       Test.A.A := 10;
     End.

 ! Fixed a small memory leak in the echomail tosser

 + MUTIL now logs the time each process takes to complete which is logged and
   displayed on the screen.

 + Rewrote the message reply linking now that Squish is gone, and it should be
   up to 50% faster now.  Removed the "quick_link" option which at least for
   now (it is now always on).

 ! Fixed a bug with the message base packer that was preventing it from
   properly adjusting the reply linking when renumbering message bases

 + Mystic now uses JAM's third reply field (ReplyTo, ReplyFirst, ReplyNext)
   in all areas of the BBS and its utilities.

 + File base file listings now generate CRC64 signatures that are used for
   increased speed during file duplication scans.  These are stored in .DFX
   files, one for each entry in the file listing.

 + MUTIL mass upload now supports @TEXTDIZ during mass uploads, which is a
   feature of Mystic that can extract embedded @BEGIN_FILE_ID_DIZ tags from
   text files and use them as the file description.  Previously this only
   worked from user uploads to the BBS or the online mass upload.

 + Mystic's online .DIZ processor during uploads and mass upload can now
   parse PCBoard, Wildcat, and WWIV color codes in .DIZ files in addition to
   the already supported PIPE and ANSI.

 + MUTIL's mass upload can now handle .DIZ files with embedded ANSI, PIPE,
   PCBoard, WildCat, and WWIV color codes.  Mystic will translate them into
   ASCII and then apply colors to it using pipe codes, then save it so that
   it shows as intended, but can easily be stripped of color when needed.

 + Rewrote MUTILS mass upload logic so that it is literally thousands of
   times faster than it used to be while doing even more than it was.  Check
   out these differences in speed, its pretty crazy:

      BEFORE: Mass Upload Files    Uploaded 10000 file(s)    DONE 364.29s
       AFTER: Mass Upload Files    Uploaded 10729 file(s)    DONE 0.45s
       AFTER: Mass Upload Files    Uploaded 10729 file(s)    DONE 11.73s

   The first "AFTER" was with .DIZ importing turned off the second was with
   full DIZ importing.  729 files most of which had .DIZ files and then
   10,000 small text files that were scanned for @BEGIN_FILE_ID.DIZ tags and
   the total was 11.73 seconds, an improvement of 352.56 seconds!  Adding one
   file into a database of 10s of thousands took 8/100th of a second!

 + Files uploaded by FTP will now import DIZ descriptions into the BBS using
   ANSI, Pipe, Wildcat, PCBoard, or WWIV colors, like other areas of the BBS

 + Significantly increased the speed of duplicate file searches in Mystic,
   MUTIL (mass upload, TIC processing), and the FTP server.

 + TIC importing can now handle .DIZ files with ANSI, pipe, etc and even
   embedded @BEGIN_FILE_ID.DIZ tags like everything else can now.

 ! Fixed a bug that could make the cursor go a little weird when pressing
   the HOME key at the end of the lightbar file lists.

   <ALPHA 1.12 A3 RELEASED -- Feb 18, 2016>

 ! Fixed a small memory leak that could occur when an invalid echomail link
   sneaks into the datafiles.

 + More general performance increases centered around file I/O.

 + Pressing enter on the OTHER tab in CFG would cause a crash in A3.

 + MUTIL now properly merges and regenerates SEEN-BY and PATH kludges with
   proper sorting of SEEN-BY when Mystic is hubbing echomail to downlinks.

 ! Fixed a bug with MUTIL netmail routing when Mystic is hubbing a network

 ! Adding new groups was not correctly assigning an incremented group ID.
   If you have groups created in A3 you'll have to recreate them if it
   have the same ID as another group.

 ! Fixed missing From/To/Subj info in the message reader that I broke in A3

   <ALPHA 1.12 A4 RELEASED -- Feb 20, 2016>

 + MUTIL now removes duplicate SEEN-BY information when tossing messages

 + The GD (display a file) command can now have a " /NEW" appended on the
   end of the command data, which if found, will only display the file if
   its file date is more recent than the user's last login.

 ! Fixed .DIZ importing during online upload and online mass upload that I
   broke when redoing the batch uploads.

 ! Deleting HISTORY.DAT will now also reset the system callers number when
   Mystic attempts to update the history for the first time.

 + You can now move between prompts using up/down keys while simulating
   prompts in the theme editor.

 ! Fixed a bug which could cause the node to lock up in Linux when using
   DI baud emulation codes.

 ! Fixed weirdness in ignore functions from MUTIL mass upload introduced
   in the last alpha.

 + Added a ton of debug logging to MUTIL mass upload since its a rewrite
   so turn loglevel 3 on if you have any problems and send me the results

 + Selecting the hotkey in the menu editor from the list (CTRL+L) now gives
   a brief description of some of the preset hotkey values

 + Minor visual clean ups in the System Configuration that no one will notice
   except for my OCD.

 + The System Configuration now has a General Settings > Config Theme option
   which switches between the Default configuration theme we're all used to or
   a Custom theme.  For now the colors of the custom theme are not
   configurable but some reasonable defaults are in place in the meantime.

 ! Added a "never delete" flag into the User editor which prevents users from
   ever being deleted by a user packer/purger.  This has always been a feature
   but it was mistakenly missing from the user editor.

 + New user flag option "Force password change" will force the user to change
   their password on their next login to the BBS.

   <ALPHA 1.12 A5 RELEASED -- Feb 24, 2016>

 + Mystic's NNTP server now properly auto reformats free flowing lines when
   long messages are posted.

 ! When uploading a message that doesn't contain any content, Mystic was
   sometimes confusing the current line being edited in the FS editor

 + NNTP server no longer logs passwords even with the highest log setting

 + NNTP server now adds TZUTC kludges to echomail posted via newsgroup
   readers.

 ! Fixed lots of issues with FTP upload introduced recently.  FTP uploads
   were not using the base ID to find the file base, and the .DIZ importing
   was broken.  Everything should be back to normal now (hopefully) but I
   will be doing more testing in the future.

 + If the SIZE field is missing from a TIC file, Mystic will now calculate
   the file size by looking at the actual file received.

 + Enabled verbose FTP server logging, similar to NNTP server.  These will
   both be loglevel 3 logs when I switch over to the log rollers soon.

 ! Users marked for deletion that were not yet physically removed were still
   showing up in the user listing.

 + The FTP server now allows files to be deleted via FTP from Mystic's file
   bases, if the logged in user meets the Sysop ACS requirements for that
   base.

 ! Fixed a small memory leak in MIS's server status window.

 + Mystic will now add a DUPE kludge to messages when moving to the bad
   message base using the following format:

     @DUPE <Areatag> <PKT origin> <PKT dest>

 + Added a new Archive viewing system.  This will create a virtual disk space
   of an archive, and allow you to nagivate the archived files, directories
   and even any number of archives within the archive itself.

   You can download and view files from anywhere, even when in an archive
   inside of an archive inside of an archive, etc.  The usual cursor movement
   functions are available, along with remote mouse support and on the fly
   text searching by simply typing.

   Two new files go along with this using the new(er) template format:

     archive_view.ans - Contains the ANSI of the browser UI
     archive_view.ini - Contains all of the prompts and configuration options

   For the moment ZIP, RAR, LZH, and LHA are supported but I am looking into
   additional formats.  For now I think I've covered the most common/needed.

 + Message base global editor now allows you to specify the ANSI flag

 + Minor cosmetic things to MUTIL to expand the status field and add commas

 + Mystic's MUTIL will now refuse to save duplicate messages when tossing
   echomail if the configured dupe message base is not a local type base.

   <ALPHA 1.12 A6 RELEASED -- Mar 1, 2016>

 + The Echomail Nodes editor now has functions to /Copy /Paste and /Move
   entries.

 + When using the /Exports editor in the Echomail node configuration, you
   can now add new exports in bulk, by tagging any number of message bases.

 + Mystic now strips leading and trailing spaces from PKT AREA tags just in
   case a poorly formatted message is received with AutoCreate enabled.

 + When simulating prompts in the Prompt editor, Mystic will now show the
   PromptInfo codes in their formatted place

 + Added some new permanent debug logging to Message Purging function

 + Mystic's message packer no longer recalculates the "date arrived" field
   when packing bases.  Some 3rd party stat tools use this and not the date
   the message was written for stat generation, and this could throw off its
   reporting from date ranges.

 ! Fixed ANSI gallery crash in Linux 64-bit version

 ! Fixed broken ANSI display baud emulation in 64-bit Linux version

 ! Fixed quirkiness causing Pi version to sometimes crash on login.

   <ALPHA 1.12 A7 RELEASED -- Mar 11, 2016>

 ! Fixed Pi crashing in A7 on login from MIS

 + Cleaned up the BINKP server authentication logging to be a little more
   clear when describing what its doing.  It should be much easier to
   understand even with full debug logging on.

 ! (Hopefully) fixed issues with Shell, BBS events not honoring the day of
   the week during execution. Reduced the resources used by the event system

 ! User editor was not properly saving the "Never delete" flag

 + Added "getuser" and "onekey" functions into Python and updated the
   testpython.mpy in the default install.  This will continue to be updated
   as new functions and features are added and I need to test them.

 + New menu command *T opens the theme editor

 - Removed all door menu commands except for DD and D3.  The old ones will
   continue to work for now, but there are only 2 commands (DD and D3) to
   execute a DOS or Door32 door.  Mystic creates all drop files now for any
   door execution.

 + %0 now gives the socket handle on door command lines in Linux (like it does
   already in Windows)

 ! Deleting file bases using the file base editor was not properly deleting
   the data files when selected to do so.

 + File Base editor now has a /Reset command similar to the Message Base
   editor that will reset the file listings in the base, while maintaining
   all of the other important details (user scan settings, echo exports).

 ! Fixed a problem with duplicate file searching in Linux, but *everyone*
   should make sure they run the MUTIL file base packer so Mystic can
   regenerate indexes for their file listings.

 + Lots of UTF8 cleanups.  Mystic now has a Local CodePage option which is
   used as the default when the -L command is used (local login).  This
   allows separate defaults local console vs an incoming caller.

 + UTF8 was not working in -CFG mode. It now uses the local codepage.

 + INSTALL program for OSX now defaults to using UTF8 and no longer bleeds
   screen data after viewing update/whatsnew.

 + ReWrote the group changing code.  Calculation of the number of bases per
   group should be much faster now.

 + MUTIL will now honor the local codepage and run in UTF8 in Linux/OSX

 + MIS will now honor the local codepage and run in UTF8 in Linux/OSX

 + NODESPY will now honor the local codepage and run in UTF8 in Linux/OSX

 ! Fixed kludge lines bleeding into ANSI in some ANSI message posts

 ! Fixed a bug sometimes causing OSX to error with "Cannot find MYSTIC.DAT"

 + FILES.BBS importer now has a few new options to help speed things up as
   well as support more variations in formats.  See Wiki or MUTIL.ini for more

 ! The uploader name would show the date in listings when a file had zero
   lines of description (a situation Mystic itself cannot create)

 ! After tossing nearly 3 million echomail messages, I think I finally found
   a bad memory reference which I hope could be the cause of some strangeness
   seen by one or two systems over the past year or so.  Fixed either way.

 + Local Codepage now defaults to UTF8 in OSX (OSX defaults to UTF8)

 + INSTALL will now exit if the any of the directories already exist instead
   of letting you reinstall over.  Sorry for those who like this option I
   will probably as a Yes/No at a later date.

 + Local Codepage now defaults to UTF8 for Pi (Jessie defaults to UTF8)

 + NodeSpy terminal now also supports CTRL+I and CTRL+D to delete after I
   realized that Apple keyboard have no INSERT key.  Apple is so weird...

 ! Some fixes for screen artifacts in OSX and Pi, things look very pretty
   and although no one uses it, the OSX version is really coming along!

   <ALPHA 1.12 A8 RELEASED -- Mar 25, 2016>

 + Rewrote the online Mass Upload which should have some minor speed
   improvements when adding a large amount of files but its still no where
   near as fast as MUTIL (at the cost of using WAY less memory).

 ! Fixed another bug in the MUTIL massupload in Linux which was causing it
   to generate file indexes for Windows system (case insensitive) and would
   result in creating duplicate file list entries.

 ! Fixed a bug with placing Netmail messages in the wrong Netmail base that
   was introduced in A8.  This did not break netmail just made things weird.

 + Mystic Windows now disables the "X" close button in the Window so you can't
   force close Mystic and create ghost users.  Should have done this years ago!

 + MUTIL now has a second type of log rolling.  While the existing type rolls
   by file size, logs can now also roll by day.  Daily logs will have a date
   stamp appended to them, for example "mutil.20160329.log" and after a certain
   number of days, the oldest file will be erased.

 ! Fixed a bug in the new ZIP viewer code which would cause crashes while
   viewing certain ZIP files or during uploads when importing FILE_ID.DIZ

 + An "id" option can be set in NodeSpy's general stanza which will append
   onto the Window title when running.  For example, if:

     [General]
       id = My BBS

   Then the Window titles will have the ID appended, such as:

      "NodeSpy/Main (My BBS)"

 ! Fixed a NNTP lockup bug that I introduced in an earlier alpha

 + NNTP server now will trim blank lines off of the beginning of the message
   instead of just the end.

 ! (Hopefully) fixed file searching crashes in Windows XP.

   <ALPHA 1.12 A9 RELEASED -- Mar 30, 2016>

 + Added three new menu commands for creating and evaluating semaphores
   from within the menu system.  @NODE can be replaced with the node number if
   desired.  See Wiki for more info:

      !C - Creates the semaphore filename in optional data
      !D - Delete the semaphore filename in optional data if it exists
      !E - Check if semaphore filename exists and set result in "OK" ACS.

 + When copying a message from one base to another, Mystic will rebrand the
   message using the real name if the destination has the real name flag.  In
   order words, if a user posts to AGN_BBS on AgoraNet and then copies that
   message to BBS_CARNIVAL on FidoNet, Mystic will strip and regenerate all
   kludges and origins as it were posted to FidoNet.  It already did that, but
   now it will also change the From name to the user's real name when it can.

 ! After uploading a message, Mystic's user action would still be set to
   "Transfering files".  Fixed.

 ! Fixed a potential exploit added in the 1.12 alphas earlier.  TO BE VERY
   CLEAR it is not an exploit that would compromise any data, just one that
   could be used to cause a corruption in data files.  Please upgrade
   immediately if you're using a 1.12 Alpha prior to A10.

 ! Fixed a problem with uploads related to xfer.log

 + New command line option for Mystic -CP<mode> to override the default code page
   for that session.  IE: ./mystic -CPutf8 will force UTF8 default output
   regardless of the default setting.  Any -CP that does not contain UTF will
   cause Mystic to default to CP437

   <ALPHA 1.12 A10 RELEASED -- April 4, 2016>

 + Mystic now has an option to add [ANSI] prefix to message subjects of ANSI
   messages, found in the Message Base Settings.  This can be set to off, on,
   or echomail only.

 + Mystic will now strip all [ANSI] tags and RE: prefixes prior to replying
   to a message, and recalculate/re-add them as required when saving the
   reply message.  That means if you reply to a message with an ANSI tag but
   the reply contains no ANSI, the [ANSI] tag will be removed from the subject

 + Mystic now has a new option in Message Base Settings: "Add Re: Prefix"
   when on will add "Re:" to the subjects of replies (as Mystic always has) or
   when off it will strip Re: and not add.

 ! Netmail and private message bases will no longer be listed and readable
   in the NNTP server even if the SysOp configures it show up via NNTP.

 + New command line option for the "mystic" binary: -PATHS.  This will open
   Mystic's "System Directory" configuration so that the root paths can more
   easily be changed when copying Mystic between operating systems such as
   Windows to OSX, etc.

 + QWK Path is is now also listed in the System Directories configuration

 + New message scans should now be much more efficient when updating last
   read pointers.

   <ALPHA 1.12 A11 RELEASED -- April 18, 2016>

 ! Fixed an issue that would cause file scans to fail if the data files for
   the first file base were missing.

 ! In Windows, SysOp macros are now executed by pressing CTRL+F1-F8 keys,
   because the F1-F8 keys are now used in the ANSI editor, etc.

 ! Some cleanups to the ANSI message uploaded, when uploading multiple ANSI
   files into the message editor.

 ! Fixed a bug with downloads when trying to download during a file scan or
   search.

 + Extended the amount of time Zmodem receive gives to start uploading from
   30 seconds to 90 seconds.

 + Zmodem no longer retries to send the ZFIN header while waiting for the
   OO marker at the end of a transfer session, for quicker ending of
   transfers for implementations that appear to not send OO (SyncTerm).

 + Adjusted Zmodem timings in certain places to allow for more time for
   users to respond to things like Overwrite prompts before timing out.

   <ALPHA 1.12 A12 RELEASED -- April 28, 2016>

 ! Fixed remaining known issues relating to new file listing indexing which
   should in turn fix any strangeness experienced with tagging and
   downloading files.

   <ALPHA 1.12 A13 RELEASED -- May 3, 2016>

 ! Fixed problem in socket functions when output buffers were filled that
   could cause loss of data during Zmodem, FTP, and BINKP transfers.

 + Improved reliability of ANSI detection in Windows

 + Added a keypressed function to Python engine

 + Added a bit more error logging during echomail exporting in some cases

 ! Found some debug stuff in the display file function which was causing
   Mystic to do a lot more work than it should have been doing.

 ! Fixed an issue in lightbar/grid style menus when doing key jumps with the
   new menu command IDs.

   <ALPHA 1.12 A14 RELEASED -- May 15, 2016>

 + Pressing backspace as the first key while editing a field in the
   configuration editors will now automatically erase the entire input data.

   Let me know if you do not like this change.

 + Pressing ESCAPE during string input within the configuration editors will
   now restore the default string and exit the input.

 ! Fixed an obscure bug in the menu system that is hard to explain and that
   no one would ever likely find! :)

 + Added a little more debug logging to echomail processing, but this is
   probably temporary.

 + Mystic now prints a message if Python is executed when it is not detected
   on the system.

 + Mystic now prints a message if Python fails to initialize when executing
   Python.

 + Mystic's echomail export function will now check the configured echomail
   domain of the message base, and the domain of the destination address. If
   the domains do not match, Mystic will log and refuse to export the message

 + Mystic will now refuse to let you edit a user in MCFG's user editor if
   the user is currently logged into the BBS.  This capability is on the TODO

 + Mystic now immediately updates the online username as soon as they log in
   as opposed to waiting until the first menu.

 + New menu command -B will break the current menu execution chain, when using
   commands stacked by hotkey.  In other words, if you have 4 commands all
   with the same hotkey, and you call -B on the second one, only the first
   and second command will run, the 3rd and 4th will be skipped because the
   -B menu command breaks the chain of commands.

 + Mystic's PKT reader will now handle the 65535 auxNet format which appears to
   not be in the FSC, and I have no idea where it comes from but Mystic should
   now handle it correctly.

   <ALPHA 1.12 A15 RELEASED -- May 23, 2016>

 ! Fixed a problem exiting the prompt editor introduced in last alpha

 ! Mystic now properly populates auxNet for point systems in PKTs.

 ! Fixed a pretty big bug when acting as an echomail hub with multiple
   downlinks that used raw PKT mail instead of compressed bundles.

   <ALPHA 1.12 A16 RELEASED -- May 28, 2016>

 ! Fixed an issue with Python get_user that I broke in last alpha.

 + Duplicate file scans are now case insensitive even in Unix environments, due
   to many older DOS systems creating .TIC files that do not match the actual
   case of the filename.  YOU MUST RUN MUTIL FILEBASE PACKER ONCE TO REGENERATE
   NEW FILE BASE INDEXES AFTER UPGRADING TO ALPHA 17 IN LINUX, OSX.

 ! MUTIL will now more graciously handle a configured invalid duplicate
   database size value.

 + Specifying a 0 or negative value for dupe database size in MUTIL will now
   disable dupe tracking entirely.

 + MUTIL will now refuse to run if the semaphore directory does not exist.

 + MUTIL now creates a mutil.bsy file in the semaphore directory.  If this file
   exists, MUTIL will refuse to run - preventing multiple instances of MUTIL to
   be executed at the same time.  If the BSY file has existed for more than a
   day, MUTIL will remove it and run as expected.

 + FIDOPOLL now creates a "fidopoll.bsy" in the Semaphore directory while its
   running.  This works in the same way as MUTIL does to prevent multiple
   instances of itself from running.

 + MIS now creates a "mis.bsy" in the Semaphore directory while its running.
   This works the same way as MUTIL and FIDOPOLL to prevent multiple instances
   of itself from being executed.

 + FIDOPOLL and MIS BINKP now use a .BSY file system.  These files are created
   alongside the .out files when queuing and sending mail for a node.  If the
   .BSY file already exists for that node, Mystic will not queue mail for that
   node.  If the .BSY file is more than a day old, Mystic will assume the .BSY
   file was accidentally left over from a stopped process and will exchange
   mail for that node as requested.

 + MUTIL echo export will now create and check for .BSY flags when exporting
   messages.  It will wait for up to 3 minutes for all downlinks to NOT be
   busy prior to exporting, while flagging any echomail nodes as owned by
   MUTIL as they become freed up by other processes.  This continues until
   MUTIL "owns rights" to every echomail node, so that it can toss mail without
   interfering with any other mail process (BINKP server, client, FTP, etc).

   If the 3 minutes expire, MUTIL will exit because it cannot process mail when
   nodes are exchanging by BINKP/FTP.  MUTIL will not remove semaphores in this
   case, so the cycle can continue until the export is processed successfully.

   Like other areas, if a .BSY flag stays for more than a day, it will
   automatically be removed and assumed to be a result of a stuck process.

   This system works hand in hand with BINKP server and FIDOPOLL (and even
   BINKD) so that no nodes will transfer mail when MUTIL is tossing mail
   to them, and MUTIL will not toss mail while a node is picking up mail.

 + MUTIL tossing to downlinks during importing now works the same as the
   export system described above.

   <ALPHA 1.12 A17 RELEASED -- June 3, 2016>

 + MPL programs now load entirely into memory.  As a result, the current
   maximum size of a compiled MPX file is now 128KB instead of being
   unlimited, but this can be easily increased if needed.  This move increases
   execute parsing speed by about 20%, but MPL is still about 60-80% slower
   than Python (in 32-bit.  64-bit MPL is much closer to the same speed).

 + Rewrote the archive viewing functions for a massive speed up.  A ZIP file
   that contained 15,554 files and 1,198 directories was imaged by the viewer
   in *47 MILLISECONDS* in A18 but took 10.5 SECONDS in A17.  HUGE
   DIFFERENCE!

 + FIDOPOLL now has a "killbusy" command which will delete any existing .bsy
   flags for all echomail nodes.  Note that this does not remove the program
   specific bsy files for MUTIL, MIS, FIDOPOLL, etc, just the echomail nodes.

   For now you can also run "killbusy all" and it will kill even the .BSY
   flags for the various tools such as MIS MUTIL and FIDOPOLL.  But this is
   undocumented and HIGHLY NOT RECOMMENDED to use.  In no circumstance should
   a .BSY file ever be removed when MUTIL MIS or FIDOPOLL is running.  This is
   a convience feature because the BSY system is new and may have quirks.

 + MPLC now properly syntax errors when attempting to assign a default value
   to a record variable.  This mistakenly compiled in 1.11 but did not work.

 + Added a "mis.log" in the logs directory which gives some very basic status
   during startup and shutdown of MIS when its running in DAEMON mode in Unix

 ! This is part bugfix and part new MPL feature.  You can now do this with
   records and arrays and records within records.  Another huge win for MPL:

   Type
     TestRec = Record
       Key  : Integer;
       ATest: Array [1..25] of Integer
     End
   Var
     Test : TestRec
     B    : Integer;
   Begin
     Test.Key             := 10;
     Test.ATest[Test.Key] := 5;

     B := Test.ATest[Test.Key];

     WriteLn ('B=' + Int2Str(B));
   End.

 + The prompt editor will no longer erase the entire prompt if the first key
   pressed is the backspace key.  The other configuration editors will retain
   this functionality though.

 + Added a "Waiting for BUSY nodes" message to MUTIL import and export, so
   people do not kill MUTIL process thinking it locked up while its waiting.

 + MPLC now has many new compiling options.  -ALL now compiles all files in
   the current directory AND ALL SUBDIRECTORIES.  New options are:

     MPLC [path/file] Compile one script [path/file]
     MPLC -ALL        Compile all scripts in current directory and subdirs
     MPLC -C          Compile all scripts in current directory
     MPLC -P [path]   Compile all scripts in [path]
     MPLC -R [path]   Compile all scripts in [path] and its subdirectories

 ! Fixed a bug that could cause MIDE to lock up when including files.

 + MIDE and MPLC now only update the screen status every 10% when compiling
   a while, instead of every 1%.  The scaled back update makes compilation
   more than twice as fast on my system.  Big win!

 + MPLC will now track all encountered errors during compilation, and will
   print an error summary to the screen after all files have been processed.

 + If the first word in a MPL source file is "library", MIDE and MPLC will not
   compile the source file and instead will report an immediate "success". This
   can be used so that if you create an include library, it will only be
   compiled when its included by a program, and not as a stand-alone MPS file
   when encountered by MPLC.

   <ALPHA 1.12 A18 RELEASED -- June 8, 2016>

 + New formatting MCI code |$Txx will cut off a value if it is longer than
   XX characters so that its length is XX.  If the value is less than XX
   characters it does not do any formatting to the value.

 + Added a -VER option to mystic.exe that will print the version and exit.

 ! Fixed a bug I created in A18 that would cause QWK networking importing to
   incorrectly read the message contents.

 + MPLC will now try to search search for include files in the same directory
   as the source file, if no directory is found in the include file name.

 ! Fixed an issue with MPL parsing of files by reverting some of the parsing
   optimizations back to the old stuff.  MPLC will still be faster but not
   quite as fast as A18.

 ! Fixed a potential issue where MIS could drop root before binding the ports
   of all of the servers in the Unix versions.  This could cause a situation
   where one or more servers fail to bind, while others bind find during
   startup.

 + MIS now waits until all ports are bound and privileged access has been
   dropped before creating the .BSY file.  This may or may not change again!

 + Themes now have 4 Box styles, up from just one.  In addition, each box
   style now has some additional options available to it.

 + New MCI code performs a popup Yes/No box and the result will be used as
   the following YES/NO answer.  Mostly to be used in the "prompt" of a yes/no
   question.  The format is:

      Syntax:  |#Y#<style #>#<Y position>#<header>#<text>#
      Example: |#Y#2#10#Confirm#Do you want to do this?#

      The above example will pop up a Y/N box using style 2 with a header
      of "Confirm" and a message box text of "Do you want to do this?".

   After the YES/NO box, Mystic will restore the screen to the original state
   before the box was shown.  This function only works with ANSI graphics.

 + New MCI performs a pop up vertical selection box, with the selected item
   hotkey being pushed into the input buffer, and the screen restored to its
   original state after selection.  This only works with ANSI graphics. The
   format is:

     Syntax: |#V#<style#>#<X position>#<Y pos>#<header>#<commands>#

     <Commands> is a comma separated list of commands in the format of
     <hotkey>-<text>.  If <text> is blank, the hotkey will be allowed by not
     shown in the list.  If the entire entry is blank a blank line will be
     inserted into the list.

     Example:

     |#V#2#30#10# Header #A-Selection A,B-Selection B,C-Selection C#

     Creates a pop up lightbar box in style 2, starting at X30 Y10 that has
     three options:

        .----- Header ----.
        |  A Selection A  |
        |  B Selection B  |
        |  C Selection C  |
        `-----------------'

     When an item is selected, Mystic sets the color to black on black and
     pushes the hotkey into the input buffer, so that the prompt it replaced
     gets the input key.

 + New MCI code draws a box using a specific theme style.  It does not take
   input or erase itself at all.

     Format  : |#X#<style>#<header>#<x1>#<y1>#<x2>#<y2>#
     Example : |#X#2# My Header #20#10#60#16#
     Result  : Opens a box at X20 Y10 to X60 Y16 using style 2 and
               header " My Header "

 + Python scripts can now be executed from the command line, just like MPL
   scripts.  The format is the same except -Y is used, so for example:

     mystic -uSysop -ppassword -ytestpython

 + Mystic's full screen message editor has been converted to a .ini file
   format instead of the old ANSI style template.  The following files are now
   part of the message editor template:

      msg_editor.ini
      msg_editor.ans
      msg_editor_quote.ans
      msg_editor_help.ans

   New defaults are included with a redesigned look that uses some of the new
   box MCI codes to pretty things up a bit and to give a functional example of
   them.

   If you used a customized full screen editor, you will of course have to
   remodify the new defaults to your liking.

   Also in this new message editor is the spell checking and word suggestion
   engine, which required a bunch of code changes to the screen updating and
   wrapping.  Because of this, the spell checking itself is not going to be
   documented just yet until the new editor gets a little testing.  Spell
   checking will be enabled very soon, assuming I do not have troubles porting
   it to 64-bit.

 - As a result of the new message editor template, prompts #354, 355, and 356
   are no longer used as they are now in the .ini file.  In addition, ANSI
   display files "ansiquot.*"  "ansiedit.*"  and  "fshelp.*" are no longer
   used and can be deleted from your text directories if you'd like.

 ! Fixed a bug in my string list class that I created in A18 I believe.  No
   telling what problems it caused but it could have been many.  I know at a
   minimum it was breaking the FTP client (qwkpoll/fidonet FTP mailer).

 + Renamed UPDATE.EXE to UPGRADE.EXE because Windows 10 acts weird when a
   file named update.exe is executed.

 + I am sorry to do this, but I think few people use them.  The format of the
   |#B and |#I MCI codes has changed to the following:

     OLD: |#B<header>#<text>#
     NEW: |#B#<style>#<Y position>#<header>#<text>#

   This adds the new style system into the mix, and also now allows you to
   specify the Y line where the msgbox stands.  If you use either of these
   MCI codes you'll have to update those places.

 ! No longer shows an error message when executing a MPL file that doesn't
   exist.

   <ALPHA 1.12 A19 RELEASED -- June 8, 2016>

 ! Fixed a bug introduced in A17 when using CTRL+U in the user editor to
   upgrade security levels.

 ! Fixed the description editor in file base editor.  For now its just going
   to load the message editor until I decide how I want to redo this part.

 ! Reverted my A17 changes in the string library, because while its a
   performance increase, its too risky to wait and find/fix all of the things
   that break because of the change.  This will fix a lot of the new quirks
   that have shown up out of nowhere since A17.

 + Added some additional logging into the population and updating of FLO
   files when exporting echomail via MUTIL.

 + Mystic's networked QWK packets should now honor the actual date and time of
   the message.

 ! Mystic's menu editor was not regenerating a new UID when pasting a menu
   command.  This really only causes a problem if someone is using a grid
   style menu.

 + Added new menu action "IT" which opens an outbound telnet session.  The
   optional menu data must contain the address to connect to via the
   following:

      /addr=<address>[:port]

   If no port is specified it will default to 23 for Telnet. For example:

   /addr=mybbs.strangled.net
   /addr=mybbs.strangled.net:2323

   The CTRL+] key is the escape hotkey which will allow the user to
   immediately disconnect from the remote system at any time.

 + Added new menu action "IR" which opens an outbound RLOGIN session. The
   optional data should contain a minimum of an address, username and password
   using the same format for the address as the telnet command, with these
   additional RLOGIN specific commands:

   /user=<username>
   /pass=<password>
   /swap

   Swap tells Mystic to send the username first then password as this is
   typically password then username in the BBS scene, but others require the
   username to be sent first.

   If no port is specified, Mystic will default to port 513 which is the
   default RLOGIN port.  The escape key is ^] just like in Telnet.

   Example:

     /addr=twgs.mybbs.com:513 /user=g00r00 /pass=mypassword /swap

 + The following prompts have replaced some UNUSED prompts in the prompts
   file of each theme, these are used by the TELNET and RLOGIN functions:

     ; TELNET/RLOGIN: Connecting prompt &1 = address &2 = port
     354 |CR|08> |07Escape sequence is |08|15CTRL+|15]|08.|CR|08> |07Connecting to |15|&1 |07port |15|&2|08.|CR

     ; TELNET/RLOGIN: Connected successfully
     355 |08> |07Connected.

     ; TELNET/RLOGIN: Unable to connect
     356 |08> |12Unable to connect: Press a key|PN

 ! Possibly fixed a bug in the message base packer that could cause corrupted
   message bases in certain circumstances.

   <ALPHA 1.12 A20 RELEASED -- June 15, 2016>

 + The RLOGIN menu action will now translate @USER@ to the user's handle when
   used in the "/user=" or "/pass=" part of the command data.

 + MUTIL now prints the version in the logging on startup.

 ! Fixed broken telnet/rlogin commands.

 ! The library "revert" from the last alpha didn't actually happen, so this
   time its really happened.  Should fix up a bunch of little quirks
   introduced in A17.

   <ALPHA 1.12 A21 RELEASED -- June 17, 2016>

 ! Fixed some bugs with the upload process, created by the upload rewrite a
   couple alphas ago.

 + Changed the processing of "trashcan.dat" user names to check for the user
   name before offering to create a new user account.  If a name is entered
   from trashcan.dat at login prompt, Mystic will send them a new prompt:

     ; Login prompt: User enters a username found in trashcan.dat
     375 |CR|12That user name is unacceptible.

 + Added new default MPL script menucmd.mps

 ! Fixed a problem with MIDE executing MPL scripts from within the editor
   when passing program params.

 + Added some exception trapping into MIS in a few places which may or may
   not improve stability when running in UI mode.  Just a band aid until the
   new MIS is ready.

   <ALPHA 1.12 A22 RELEASED -- June 23, 2016>

 ! Fixed a bug which could cause a crash when exiting the message editor,
   rarely seen except when editing auto signatures.

 + Mystic has a new MSGID generation algorythm.  This can generate ~ millions
   of MSGIDs per second across up to 1000 concurrent processes without creating
   a collision for 100 years, and it can fit it into a 32-bit integer.  I say
   up to because my hardware is not powerful enough to push it to its limit.

 ! Messages posted by user uploaded REP packets were not adding MSGID to
   posts made in echomail bases.  Should be fixed.

 + Messages posted by REP packets will now replace "--- " with "___ " which   are assumed to be lines containing a QWK reader tear line.
   are assumed to be lines containing a QWK reader tear line.

 + When uploading a .REP packet in Unix based systems Mystic should no longer
   require proper filename casing.  MYSTIC.rep mystic.REP MyStiC.REP should
   all be recognized.

 + QWK performance improvements when creating QWK packets for download.

 + Significant performance improvements to processing of user .REP packets

 + Mystic QWKE will now flag netmail bases as PRIVATE even if the base itself
   isn't configured as Private.

 + Mystic's QWK/QWKE will now set the private read/unread and public
   read/unread flags where applicable.

 + Netmail message bases will no longer be included in QWK packets due to
   limitations in the very outdated standard.  Netmail bases WILL be included
   in QWKE packets.

 + Mystic's QWKE system now supports Netmail via QWKE, and will change the
   To and From field to contain the user name and the origin/destination
   address.  Simply replying to the message and keeping the name and address
   in the To field will allow Mystic to route the netmail accordingly when
   it is importede from a .REP packet.

 + Mystic now properly applies a group-independant "Post ACS" check for each
   message within a .REP packet.

 + Mystic now creates an index of all personal messages in QWK packets, used
   by some readers to quickly give a reference to all personal messages.

 + Mystic now changes all "personal" message "TO:" fields to the user's alias
   when creating a QWK packet.  Some readers apparently will not show messages
   marked as private/personal if the TO field does not match the name found in
   the QWK information file. (ie, Bluewave).

 + When using legacy QWK and a QWK base name isn't set, Mystic will use the
   first 13 characters of the configured message base name.

 + The "MysticQWK" control name for QWK control messages (adding dropping
   bases and other things from the reader) is now case insensitive.

 ! Fixed a QWK bug that could cause the wrong origin line to get added to
   a message.

 ! Uploading ANSI into the FSE or ANSI editor no longer strips ICE/blinking
   colors.

 + Added some additional exception handling to BINKP server which could
   possibly prevent MIS from stopping on a crash during BINKP.

 + The FTP server now has a "PASV hostname" option which if set to your
   hostname, will be resolved into an IP on server startup and used for PASV
   data connections.

   <ALPHA 1.12 A23 RELEASED -- June 28, 2016>

 ! Fixed a bug created in A23 QWKPOLL that could cause it to crash.

 + Slight optimizations to the FTP client used in QWKPOLL when using PORT
   based transfers.

 ! Fixed a bug created in A23 that caused the wrong origin to be used on
   Netmail messages posted by QWK and uploaded while a logged in user to the
   BBS (This didn't happen when uploading via FTP).

 + On the fly Spell checking and word suggestions are finally enabled and
   working on all platforms of Mystic.  The msg_editor.ini has been updated
   to include some new options, and those with custom templates will need to
   update theirs in order to use spell checking, if they desire.  See the
   upgrade instructions for more information.

   Mystic uses a well known dictionary format, and therefore has access to
   just about every language and dialect you can think of, and can support
   using multiple dictionaries simultaneously.

   There is also a mystic_spellcheck_v1.zip floating around on the website
   and various places which contains documentation and all of the files you
   need to get spell checking going on all versions of Mystic.

 + Mystic OS X is now compiled using El Capitan and FPC 3.0, and comes in
   both 32-bit and 64-bit Intel flavors.  In the past only 32-bit versions
   were available, so those who switch to 64-bit on their 64-bit OS should
   see upwards of a 30% performance increase in certain areas.

   <ALPHA 1.12 A24 RELEASED -- July 1, 2016>

 ! Fixed a bug in the Message Index Reader when sorting groups

 + The post text file menu command now uses the new Message base IDs, so if
   you use this function make sure the number matches the message base ID.

 + Mystic now saves the last msg/file groups and bases between sessions by
   the ID.  This should make it less likely to end up in a "None" group
   when logging in.  Note the first login after updating may result in None.

 + Performance increases when resetting file new scan date.

 + Toggling file new scan settings now shares the [A]dd all and [R]emove all
   options that the message base new scan has.  I never realized they were
   not equal in features.  Updated default prompt #202 to include the new
   A/D options.

     ; Select scanned file bases prompt
     202 Toggle: |09[|11#-#,#|09], Select [|11A|09]dd All, [|11R|09]emove All, [|11?|09/|11List|09]: |XX

 ! Fixed a bug in the spell checker auto suggestion that would cause it to
   not properly detect the word under the cursor in longer messages.

 + FIDOPOLL now has a "search" option which will allow you to do a quick
   search of the nodelist.  The search data can be an address or text, and
   wildcards are valid for addressing.  IE:

     fidppoll search 21:*/*
     fidopoll search 1:129/*
     fidopoll search james

 + FIDOPOLL [address] will now search the nodelist and attempt to connect
   via unsecured BINKP if [address] is not defined in echomail nodes.

 ! Fixed a bug in the nodelist browser where the Internet address was not
   always properly parsed.

 + Added some more exception handling to the various MIS servers.

 + Mystic now has a File Index lister, which is the file area equal to the
   message reader index.  This has taken the original message version and
   expanded on it.  New menu command FI with an optional data of the template
   name, if you wish to use something else (otherwise file_index.ini is the
   default).  Copy file_index* into your theme's text directories

 + MUTIL now properly detects and moves circular path echomail to the
   duplicate message base if one is defined.

 + Reverted MIS to use my own custom thread library.  I don't know why I
   stopped using it, but there might have been a reason lol

   <ALPHA 1.12 A25 RELEASED -- July 6, 2016>

 ! Hopefully fixed a bug introduced in MUTIL A25 causing it to write the
   wrong message header when tossing messages.

 + Mystic no longer regenerates a new MSGID when re-editing message text,
   instead it will continue to use the original.

 ! Mystic should now properly handle circular checks if the system sending
   the PKT is a point system.

   <ALPHA 1.12 A26 RELEASED -- July 7, 2016>

 ! Fixed a bug in the new QWK system that on some occasions could cause some
   but not all QWK readers to have problems with the packet.

 + When selecting a message from the message list and then returning to the
   list afterward, Mystic will now start with the last message read at the
   top of the list.

 + Significantly increased the performance of the HOME key in the message
   listings in areas with a lot of messages.  Should be mostly instant even
   with hundreds of thousands of messages.

 + Significantly increased the performance of the END key in the message
   listings. Should be nearly instant even with hundreds of thousands of msgs

 ! Fixed a bug with (I)mport DIZ in the File Listing Editor

 + Updated automessage.mps for new message editor.

   <ALPHA 1.12 A27 RELEASED -- July 9, 2016>

 ! Fixed what should be the final bug in the new dupe system which affected
   point systems.

 ! Fixed the FA + menu action that I broke in the file_index alpha.

 + Mystic 1.12 now uses the socket engine from Mystic 2.0.  This library
   supports IPV6 and SSH/various SSL protocols.  More to come.

 + Windows versions of Mystic now comes with Info-Zip zip.exe and unzip.exe
   which will be found in the root installation directory.

 + Added FBaseIndex variable into MPL.

 + Added new MIS2 server binary, which is the eventual replacement for MIS.
   This version currently only supports the TELNET, RLOGIN, and SSH servers
   but also includes IPV6 support as well.  The existing servers will be
   rebuilt one by one and added into MIS2.

   To avoid conflicts, the event system remains only in MIS for now.  If you
   want to use TELNET, RLOGIN, and SSH along with the existing servers,
   you will simply run both MIS and MIS2 for the time being while MIS2 is
   developed.

   Servers are defined using the Server Editor found in the Configuration
   under Servers -> Edit MIS2 Servers.  This will change a bit when the
   original MIS is removed.

   You can create any number of servers, and all settings are completely
   independant of each other.  You can even create multiple servers of the
   same type!  You can have IPV4 on one adapter while IPV6 runs on another
   NIC, for example.  One telnet server on port 2323 and one on port 23, etc.

   Blacklist DNS and country blocking is not in the new server yet, but
   auto banning is.  New ban files are whitelist.txt and blacklist.txt in
   the DATA directory, so they do not interfere with the existing MIS files.

   Entries in these lists can contain a mixture of both IPV4 and IPV6
   addresses and can contain a single wildcard, using an asterisk to mask an
   IP range.  For example "127.*" would block any IPV4 address that begins
   with "127.".  IPV6 works in the same way, expand the IPV6 address up to the
   point where you want to wildcard it, such as "014f:*"

   In order to use SSH and SSL variations of servers, you will need to
   install Cryptlib.  This is pretty basic in Linux and even easier to do in
   Windows because it requires simply dropping a file into the library path
   or root Mystic directory.

   <ALPHA 1.12 A28 RELEASED -- July 14, 2016>

 ! Mystic should no longer track inactivity while a user is connected to an
   outbound telnet or rlogin system using IR or IT commands.

 ! Fixed newletter, sysletter, hackwarn automated e-mails broken in A27/A28

 + New menu action: "IS" works just like the TELNET and RLOGIN commands
   but does outbound SSH.

 + Outbound TELNET, RLOGIN, and SSH are completely rewritten.  No longer does
   codepage translations based on the users terminal type, and the ^[ key no
   longer will escape a terminal session.  As a result, it should be feasible
   for transfers to work now but this may require a bit more work and testing
   with various terminals.

 - Removed the /SWAP option to IS, IR, IT menu actions.  If you need to
   swap them, just swap them by assigning /user= to the password and vice
   versa.

 - Added new options to IS IR IT menu actions: /port=<port>.  Due to IPV6
   support being added soon to these functions, the ":" will no longer be
   used to separate address from port, for clarity.  You must update any
   existing IS IR IT commands that do not use the standard port to use a
   /port= instead of a semicolon.

 ! Fixed a few stability problems with the new MIS2 server.

 ! Fixed an error in my compilation that caused errors because I forgot to
   compile in support for threads.  This could be seen in Nodespy, and in
   outbound sessions and maybe a couple other places?

 + All passwords in the echomail node editor are now not forced to uppercase
   during input.  This SHOULD be a cosmetic change because those passwords
   are all supposed to be case insensitive (except for session passwords).

 ! Fixed the broken next and previous file group change.

   <ALPHA 1.12 A29 RELEASED -- July 16, 2016>

 ! Lots of changes/fixes to SSH server on the Linux side.

 + Mystic's logging now allows more for than 255 characters per log line.
   This required a bunch of library changes, so there may or may not be some
   other things affected by this in a bad way.

 ! BINKP should no longer choke when the address string is more than 255
   characters.

 + Changed the /ALLGROUP option for the FF menu command to /GLOBAL

 + Added /NOASK option to AT menu command.

 + The stale .BSY file check has been decreased to 2 hours down from 1 day.
   This applies to echomail node locks, mutil, and fidopoll but not MIS of
   course because its very common for that to run for many hours.

 + MIS2 now has a BINKP server type.

 ! Fixed a problem with viewing archive contents of LHA Level 1 files with
   embedded directories.

   <ALPHA 1.12 A30 RELEASED -- July 21, 2016>

 + Changed MIS2 to use Free Pascal thread library instead of my own to see if
   it is more stable.

 + The MX command should now default to the message base address when posting
   echomail, so if no address is specified it should not default to 0:0/0

 + MIS2 will never recreate ssl.cert now, it will only be created when it does
   not exist.

 ! Fixed datestamp in MIS2 logs

   <ALPHA 1.12 A31 RELEASED>

 ! Fixed a problem in QWK packets that could cause packet corruption when
   processing messages greater than 64kb.  Great big thanks to William
   McBrine for the report and the suggested fix: Check out his awesome mail
   reader MultiMail if you haven't!

 ! When processing echomail PKT files, Mystic was not properly reading in
   the seconds from the message post date/time, if it was supplied by the
   sending mailer.  Please note that in some cases, this could invalidate
   current duplicate message databases, but this will of course correct
   itself over time.

   For clarification: QWK and QWKE do not have message seconds so there is
   no similar issue on the QWK side.

 - Turned off debug logging in MIS1 BINKP and FIDOPOLL.  Rejoice (for now!)

 ! Posting multiple text files at once with MUTIL to the same FTN networked
   message base could create posts that all contained the same MSGID. Fixed.

 + MUTIL PostTextFile now includes the TZUTC kludge when posting to
   FTN-style message bases.

 ! MX menu command (post text file to message base) was not adding the MSGID
   or TZUTC kludges when posting to a FTN networked message base.  Fixed.

   <ALPHA 1.12 A32 RELEASED>

 + Added some additional error logging to MUTIL's TIC processor when
   attempting to open and close TIC files.

 ! Replaced the old MSGID system with a new system. All parts of Mystic now
   use the same unified piece of code to generate MSGIDs.  This should also
   fix the recent dupe MSGID bugs mentioned in previous alpha.

 + Mystic now shows the operating system "bit" in Tear lines in messages.

 + Changed references of "OSX" to "macOS".

   <ALPHA 1.12 A33 RELEASED>

 ! Fixed a bug which could cause a bad memory reference error in various
   places within Mystic.

 ! MUTIL PostTextFile wasn't taking into consideration the tear and origin
   lines when posting to a networked base while splitting large posts into
   multiple messages.

 + -VER commandline option in Mystic now prints the OS information too.

 + Increased buffer size when writing message text to JAM bases to 32k up
   from 8k

 + Mystic JAM will no longer strip spaces from the right side of MSGID tags
   in JAM to help work around a bug with GTPower.

 ! JAM Reply CRC and Msg To CRC were not always converted to lower cased
   before calculated. As per JAM specs all CRC calculated on string must be
   lower cased first.  Packing message bases will regenerate these.

 + Reduced the time it takes to calculate Message Index Reader statistics
   by about 60%. Statistics may be calculated incorrectly unless all bases
   have been ran through the message base packer once to regenerate CRC values

 ! Fixed a bug which could cause some node processes to not detect when a
   user hangs up, possibly resulting in a ghosted user or even a stuck
   process.

 + Added a new internal protocol Xmodem/CRC. This protocol can be added by
   creating @XMODEMCRC in your Protocl Configuration and has not had much
   testing.  **This is experimental; it may or may not stick around**

 + When shutting down MIS2, it no longer prompts to press a key when closing
   but instead displays a "shutdown complete" message and pauses 1.5 seconds

 + When editing a file entry in a file base there is now a (H)atch command
   which allows files to be hatched to all networked systems linked to that
   file base.  Files to be hatched will have a "Hatch pending" text or a
   Hatched flag if the request was already processed.

 + Mystic now creates "filebone.out" semaphore file whenever a new file is
   requested to be hatched.

 + MUTIL TIC processor will now scan for requested hatches.  Any files
   requested to be hatched will have an appropriate TIC file created
   in each linked node's filebox, and the file will be copied to each
   linked node's filebox.

 + In addition to existing /E to view networked message bases linked to a
   node, the echomail node editor now has a /F to view and edit networked
   file bases linked to a node.

 + Significant stability improvements to MIS2 along with some minor cosmetic
   changes.

 ! Changed PKT addressing on pass-through echomail so that BBBS systems with
   its security feature enabled will not reject packets.

 + In the echomail nodes editor, when enabling a FileBox with a blank filebox
   location, Mystic will now give the option to automatically generate and
   create a directory for that node.  The format used by Mystic for the
   directory is as follows:

     Root filebox directory = <mystic root path> + "/filebox/"

   Each directory is created under the root location with the format of:

     <domain>_z<zone>n<net>n<node>  (p<point> appended only for points)

   Example for 21:1/108@fsxnet when installed to c:\mystic would be:

     c:\mystic\filebox\fsxnet_z21n1n108\

   <ALPHA 1.12 A34 RELEASED>

 + File bases now have a "File Echo Hub" flag which if set to Yes will
   prevent any pass-through files for this file echo.  If a new file for the
   base is received via a TIC it will be added to the file base, but not sent
   to any downlinks (unless manually hatched by the SysOp).

 ! Fixed a bug where hatched files were creating the wrong CRC value in .TIC

 ! Files hatched by Mystic were not getting the Origin field added in .TIC

 + Reduced the time it takes for calculation of area index reader statistics
   by an enormous amount, at the expensive of some accuracy.  In A33 my test
   took 6 seconds to complete a list of 300 areas with around 250,000
   messages.  In A34 I reduced it to 2.5 seconds.  In A35 its now taking
   a shocking 1/20th of one second!

 ! Fixed a bug in startup.mps when using its automatic login feature that
   could cause a crash.

 + STARTUP.MPS now allows a "UserLoginNew" boolean variable to be set which
   will push to the new user application when TRUE.  This allows MPL to
   completely replace the user login/new user processes if desired.  All MPL
   programs will need to be recompiled in this alpha.

 + Mystic will now create an "errors.log" file in the logs directory which
   is intended to be a universal place where any errors that happen in any
   part of Mystic (MIS, Mystic, MUtil, etc) will be logged.  This is a work
   in progress.  The idea is to expand on this to allow notifications within
   the MIS2/NodeSpy UIs but also to optionally have SMS/e-mail notifications
   when your BBS has errors.

 + Mystic node logs now have a cleaner output in preparation for future log
   rolling and log levels for node specific logs.

 + Completely rewrote the startup and shutdown procedures for Mystic.  This
   should be transparent to everyone but I mention it just in case.  Handling
   of connection loss and inactivity timeout events have been reworked.  This
   will allow me to do things such as implement a draft message system for
   resuming your posts (if you lose connection while posting) among other
   things.

 + Themes (regardless of when one is selected) will always fallback to the
   default theme if an error occurs while attempting to change themes.  In
   addition, -CFG can now be loaded when there is no theme configuration at
   all.

 + New MCI code <pipe>AA turns aborting ON for the current display file. This
   goes along with the existing AO code which turns aborting OFF for the
   current display file.

 + More stability work on MIS2 particularly for Pi and (hopefully) macOS
   this time although I have had limited time to do testing.

 + Performance optimizations to input functions on all platforms

 + Added new CFG variables to MPL: "CfgLoginTries", "CfgPWTries" return those
   respective settings and CfgEchoChar returns the password character for the
   current theme.

 + NodeSpy terminal now supports sending of the INSERT and F1-F10 keys to
   remote servers.

 + When connecting using NodeSpy terminal, ESCAPE will now abort connection

 + NodeSpy now has a Port field separate from the address field.  If the port
   is set to 0 then the default port will be used for that connection.  Old
   entries that used ":<port>" in the address field will have to be edited
   manually to remove the :<port> and set the Port field.

 + NodeSpy now supports both SSH and RLOGIN connections.  Entries will now
   have a configurable Protocol option where the connection type is set.

 + NodeSpy now sets connection type and name of the entry connected to in the
   window title. IE: NodeSpy/Terminal (SSH) mybbs.com

 + Removed the -PATH command line option as now -CFG should work always.

 ! Fixed a bug in the FS message editor and ANSI editor cut and paste
   functions which could cause the cursor to get completely lost.

 + Mystic's TIC processor will now always write "MS-DOS" format text files
   when writing or updating a .TIC file.  If it receives a .TIC in a
   different format, it will still covert it to MS-DOS.  This is to possibly
   provide better compatibility with DOS-based processors that may fail to
   properly read a Unix text file.

 ! Fixed a bug where MIS2 BINKP was always using an internal buffer size of
   128 bytes, instead of the intended 32KB for each send/receive buffer.

 + Mystic's random display file system now also will include letters a-z,
   allowing up to 36 randomly selected display files per filename, up from
   11.  It works the same as before.  If myansi.an1 exists, then Mystic
   will randomly select any file that exists in the myansi.an0-myansi.an9
   range or myansi.ana-myansi.anz range.  For OSes with case sensitive
   filenames, the extensions are always lowercased.  They do not have to be
   in any order, just .an1 has to exist to "trigger" the random system:

      myansi.ans
      myansi.an1
      myansi.anz
      myansi.an5

 + When killing a "ghost node", NodeSpy will now attempt to send a kick user
   command to the actual node.

 + When a Windows node is shut down by right clicking and closing from the
   task bar or when closing the window from the "Window preview" on the task
   bar, Mystic will no longer create a ghost node.  It will also log an
   "irregular shutdown event" to the errors.log file.

 + Mystic upload, mass upload and MUTIL upload will all now import
   FILE_ID.ANS if it exists as a priority over FILE_ID.DIZ.  These .ANS files
   can be full ANSI descriptions of files, up to 50 columns of art per line.

   If ANSI is found in a .DIZ file, Mystic will still continue to process it
   properly with the ANSI intact, just as it had before this release.

 ! Fixed a bug in MIS2 that could cause the configuration values to not be
   applied to BINKP server and for semaphore files to not be properly created

 + The MC (Check E-mail) command now has a /UNREAD option which will only
   list new unread e-mail messages, instead of all messages in your inbox
   when scanning for new messages.

   <ALPHA 1.12 A35 RELEASED>

 + MUTIL echomail export now logs to all log levels should it fail to release
   a BUSY flag for a node.  It will also add an entry into the global
   errors.log file.

 + MUTIL echomail import now logs to all log levels should it fail to release
   a BUSY flag for a node.  It will also add an entry into the global
   errors.log file.

 ! Mystic should now properly delete all the drop files from the node's temp
   directory when returning from a door.

 ! When routing pass-through netmail, Mystic was not setting the PKT password
   properly to the new routed node's configured PKT password.

 ! When calculating pass-through and exported netmail by route, Mystic was not
   skipping over echomail nodes that were flagged as Inactive.

 + Nodelist compiler will now process ?00 through ?99 compressed files instead
   of ?01 through ?99.

 + Mystic now logs an entry when returning from a door

 + Mystic now logs the command line for every program it runs, including
   doors and archives, etc.

 + Mystic now logs when it begins to shutdown a node normally

 + In Unix versions, Mystic will now "watchdog" any door process.  If the
   connection is lost, Mystic will immediately send a SIGTERM signal to the
   process and shut itself down.  This will fix the "DOSEMU 100% cpu" problem
   both on the DOSEMU side and the Mystic side.

 ! Fixed a BINKP bug where Mystic was not looking at the unsecure directory
   during unsecure transfers when it was comparing file sizes of files that
   already existed on the server.

 + Changed BINKP to not administer flood protection which seems to allow it
   to work better with IREX.

 ! When uploading REP packets online, the TZUTC kludge wasn't being added to
   messages.

 + Two new functions for Python: param_count() returns the number of
   parameters passed to the script.  param_str(#) returns the parameter number
   where # is the number.  Supplying (0) will give you the script location and
   name.  Supplying nothing will give you the entire command line.  Example:

     import mystic_bbs as bbs;

     bbs.writeln ("Number of parameters..: " + str(bbs.param_count()))
     bbs.writeln ("Full command line.....: " + bbs.param_str())
     bbs.writeln ("Script name...........: " + bbs.param_str(0))
     bbs.writeln ("|CRParameters (param_str):|CR")

     count = 0

     while count <= bbs.param_count():
       bbs.writeln ("   Param #" + str(count) + ": " + bbs.param_str(count))

       count = count + 1

     bbs.writeln("|CR|PA")

 + Running Mystic with a -VER now shows the date and time that Mystic was
   compiled in addition to the version.

 + Mystic will now include the compile date in the tear line for networked
   messages.  This will probably change in the future.

 ! BINKP was not always sending M_ERR frame when authentication is denied
   before connection was shutdown

 + MPLC now outputs to STDIO for better integration with compiling from 3rd
   party editors.

 + FIDOPOLL now uses the MIS2 BINKP engine, instead of the MIS engine

 + MIS2 now has an active event engine and the event engine in MIS has now
   been disabled.

 + Mystic now logs whenever a MPL script is executed

 + Mystic now logs whenever a Python script is executed

 + Mystic now logs user and password errors when supplied via command line

 + MIS2 now has local country blocking that works with IPV4 and IPV6.  It
   no longer uses a service, instead a local database exists in the DATA
   directory.  This database is named "iplocation.bin" and is a free
   LITE IPV4+IPV6 database located at:

      lite.ip2location.com/database/ip-country

   You should download the "IPV6 BIN" file, an example filename might be:
   IP2LOCATION-LITE-DB1.IPV6.BIN.ZIP and then rename the .BIN file inside
   of the ZIP as "iplocation.bin" in the DATA directory.  You will then
   use iplocation.txt also in the DATA directory to configure which
   countries to block, similarly to the way the old MIS worked.  For a
   temporary time you can also find a database at:

     www.mysticbbs.com/downloads/prealpha/iplocation.zip

   To enable this feature, configure it on a per-server basis in the servers
   configuration.

 ! Fixed a bug in the message linking, and also changed the way the linking
   creates its database.  This should hopefully allow for better accuracy but
   it is advised to pack your message bases once to make sure your bases are
   in good health if you don't do it occasionally, and then run the message
   link.

 + When debug logging is on MUTIL msg linking will now log each message it
   links and what it calculates for each message.

 ! FIDOPOLL was not honoring the BINKP packet size configuration in the
   Echomail nodes.  This could cause problems with older Mystic mailers that
   only supported up to 30KB packets because it defauled to 32KB

 + Node logs, FidoPoll and Mutil logs now all include the compile date along
   with the Mystic version.  This may be removed later.

 + The "GR" menu command (Gosub return) now has a "/NOEXEC" optional data
   option.  If this is supplied Mystic will not execute "FIRSTCMD" menu
   commands after returning to the menu.

 ! Fixed a BINKP bug where in a very rare circumstance the receive state
   could eat a frame that was intended for the send state.  This could cause
   the session to "timeout" as BINKP waits for the missing frame.

 + Changed QWK Networking HUBs to use the "Packet ID" configured in the QWK
   Network configuration instead of the BBS QWK packet ID.  The way it worked
   previously was confusing, but allowed for multiple hubs in a QWK network
   so it might be changed back before final release.

 ! FTP server was not showing the QWK packet in the root directory when using
   NLST instead of LIST

 ! Log rolling by day will now roll the log if the date rolls over at midnight
   while logging.

 + MIS2 logs are no longer buffered and should update immediately.

 + MIS2 now has an FTP server available in the MIS2 server configuration.  If
   you went rogue and tried to create an FTP server in a pre-alpha test before
   it was in the WHATSNEW then you need to go delete the FTP server before
   continuing, or else your FTP server data will get corrupted.

 + FTP server now supports Anonymous FTP.  File bases can be marked to
   "allow anonymous" and if so, those areas and the files within them will
   be available to Anonymous logins for free.

 + FTP server now supports IPV6 in both port and passive modes.

 + The FTP server will now resolve your configured BBS domain upon start up
   to get both the IPV4 and IPV6 address.  It will also perform this procedure
   every 1 hour so if a dynamic IP changes it will be detected.

 + FTP server connections now each have their own static passive FTP port
   which is the port configured as the "passive port start" plus the slot
   number added onto it.  This means you need to open up ports "FTP start port"
   + "max connections" - 1.  So if you have max connections set to 10 and your
   start port set to 60000 then you need to open up ports 60000-60009.

 + FTP server now prints if it cannot resolve domain IP on startup or when
   refreshing the IP addresses, and will also print the data port range the
   FTP server uses (which must be allowed through your firewall).

 + FIDOPOLL can now connect via IPV6.  There is a new option for each
   echomail node where IPV4 or IPV6 can be selected.  Unsecured outbound
   connections still default to IPV4 but a nodelist lookup for what seems to
   be a barely used "IPV6" flag may be added in the future.

 + MIS2 now has the NNTP server active!

 + MIS2 now checks the whitelist, blacklist, auto-ban by connection attempts
   when a connection is made before performing the duplicate IP check.  In
   the past, connections refused for connecting multiple times on the same IP
   were not being counted towards the auto-ban by connection attempts.

 + New event type has been added to MIS2 event manager: "IP Blocked".  This
   event can be executed every time an IP has been blocked by any MIS2
   server's auto IP ban configuration.

   The purpose of this is to allow you to run a command to create a block rule
   at the firewall level so that the IP cannot even reach MIS in the future. In
   Linux "iptables" can be used, and in Windows "netsh" can be used to do this.

   The @IP@ code in the shell command will be replaced with the IP of the banned
   account.  Mystic will still continue to add the IP to its own blacklist.txt
   as well.

   The default events in a fresh install now include example events for this.
   To create them in an existing environment, create a new event and set the
   type of "IP Blocked" and then the Shell command to:

     Linux   :
     Windows :

   In Windows the firewall prior to Windows Vista did not allow creating rules
   from the command line, so this default will likely only work for Vista or
   later versions.

   In most Linux installations iptables will be owned by root, and thus MIS
   will not have access to use the command.  You will need to chown iptables
   so the BBS user can access it, or chmod it so all users can use it.  Keep
   in mind setting it so all users can use it is not a secure approach.  An
   example of this might be:

     chown bbsuser:bbsuser /sbin/iptables

     If you are unsure where iptables is you could do a command from the root
     folder to locate iptables binary:

       sudo find . -name "iptables"

   Managing IP blocking rules:

     Show contents of block rules in Firewall:

       Linux   : iptables -L INPUT -v -n | less
       Windows : netsh advfirewall firewall show rule name="IP Block"

     Remove a blocked IP rule from Firewall:

       Linux   :
       Windows :

 + MIS2 servers now have a "Send Blocked" option to toggle on or off the
   sending of a message to the connected system when they are blocked.

 ! During startup MIS2 would create mis2.log and the tempmis directory with
   root access if they did not already exist.

 + MUTIL will now switch to the owner of its binary in a similar way that
   MIS and MYSTIC do, just in case someone tries to run it as root.

 + FIDOPOLL will now switch to the owner of its binary

 + MIS2 now has POP3 server.  I am not planning to do any significant testing
   until the SMTP server is added.

 + MUTIL FILEBONE.NA importer now allows the echotag to be used for the
   description and FTP name.  It also logs when an invalid line is discovered
   including the line number when debug logging is enabled.  See default
   mutil.ini for example of values.

 + MIS2 now has the SMTP server from MIS.  The old MIS has now been removed
   from the BBS and can no longer be used.  MIS2 has been renamed to MIS.

 + New MPL command: "GetFBaseID" files a file base by its ID and populates
   the FBase variables.  It also returns TRUE on success or FALSE on failure.

     If GetFBaseID(UserFBase) Then
       WriteLn ('You are in: ' + FBaseName)
     Else
       WriteLn ('You have not selected a file base yet');

 + New MPL command: GetMBaseID works the same as the GetFBaseID command above

 + New Python function "getuserid(ID)" returns a user dictionary of the user
   associated with ID.  If no user is found it will return None:

     import mystic_bbs as bbs;

     user = bbs.getuserid(1)

     if not user is None:
       bbs.writeln(user["handle"]);

 + New Python function "getmbase(num)" returns a Message Base dictionary of
   the record physically located at (num).  This example will print all of
   the message bases out:

     import mystic_bbs as bbs;

     count = 0;

     while not bbs.shutdown():
       mbase = bbs.getmbase(count);

       if mbase is None:
         break;

       bbs.writeln(mbase["name"]);

       count = count + 1;

     bbs.writeln("List complete. |PA");

 + New Python function "getmbaseid(ID)" returns a Message Base dictionary of
   the Message Base with ID of (ID).

 <ALPHA 1.12 A36 RELEASED>

 + New Python functions for reading Message Bases:

     msg_open, msg_seek, msg_found, msg_next, msg_prev, msg_gethdr,
     msg_gettxt, msg_close

   Rather than try to document them all here I've included a "msgread.mpy"
   in the default installation as an example of how to use these functions.
   This example implments a very basic message reader using the user's current
   message base.

 ! Mystic will now show "proto.xxx" or "protob.xxx" for batch-only protocols
   if they exist instead of generating a list of protocols.  PROTO should
   contain all protocols, regardless of batch or not.  PROTOB should contain
   only batch-supported protocols.

 ! Fixed a bug where Mystic was allowing non-batch protocols to be selected
   for a batch file transfer.

 ! Fixed a bug where the -Y and -N MCI codes were not always working for the
   next Yes/No prompt.

 + Changed the format of the "scan" settings data for message and file bases,
   this should be total transparent to everyone, except that update.exe needs
   to be ran to update the data files.

 + MUTIL has a new "PurgeUserBase" function will which mark users who have
   not connected to the BBS in X days for deletion.  UKILL function has been
   removed from MBBSUTIL.  Default mutil.ini has been updated

 + MUTIL has a new "PackUserBase" function which will physically delete user
   records, private messages to and from them, their lastread pointers in
   message bases, their scan settings in message and file bases.  This can
   only be executed when there are no users online.  Default mutil.ini has
   been updated.

 ! Fixed a bug where MUTIL was not always removing the proper BSY files when
   it timed out waiting for a node to finish.

 + New Python function "charxy(x,y)" returns the character and attribute of
   the user's screen at the X/Y coordinate.  Example:

     ch, attr = charxy(1, 1);

     writeln("attr=" + str(attr));
     writeln("char=" + ch);

 + New Python function getcfg() returns basic configuration options in a
   Python dictionary.  I am not going to list out dictionaries here as I am
   adding to it as people ask for it, but for with any dictionary you can
   always iterate through it to see the elements until it lands on the Wiki

     import mystic_bbs as bbs;

     bbs.writeln("|CLElements:")

     cfg = bbs.getcfg()

     for key, value in cfg.items():

       bbs.write ("Key: " + key.ljust(20));

       if isinstance(value, bool):
         bbs.writeln(" Value: " + (value and "True" or "False"));
       elif isinstance(value, (int, long)):
         bbs.writeln(" Value: " + str(value))
       else:
         bbs.writeln(" Value: " + value)

     bbs.writeln("|PA")

 + New Python function "getyn(text, default)".  This presents a Yes/No prompt
   and returns True if they answer yes, False if they answer no.  The
   second parameter is the default selection (True is yes, False is no):

     if getyn("Is this an example? ", True):
       writeln("You answered Yes!")
     else:
       writeln("You answered No!")

 + New Python function "showfile(filename, baud, pause, abort, onlynew)"

   This function shows a display file and provides all options specific to
   how it is displayed as parameters and returns True or False depending on
   if a display file was found and shown.

   The filename logic uses the same as the GD menu command (see the Wiki
   documentation for GD for more info) which means it has implied paths and
   extensions and random display files if desired.

   The baud parameter is 0 for full speed or whatever the baud rate at which
   Mystic should display the file.

   The Pause parameter is a True/False value that when True will attempt to
   pause on a full screen.

   The Abort parameter is a True/False value that when True will allow the
   file to be adorted while display using the space bar.

   The OnlyNew parameter is a True/False value that when True will only show
   the file if it has been update since the user's last login to the BBS. Ex:

     showfile("gj-glue1", 9600, False, True, False)
     showfile("c:\mystic\textfiles\mytext.txt", 0, True, True, False)

 + New Python command "getprompt(number)" will return prompt (number) from
   user's currently selected theme.  If the prompt has been replaced with
   a script or display file, Mystic will execute the script or show the
   file.

 ! Fixed an issue where setting scanned bases with the /qwknet option was
   not showing anything in the QWK networking menu.

 + New Python command "stuffkey(text)".  This function adds text into the
   input buffer as if the user had typed it.

 + New Python command "sysoplog(level, text)" logs a line to the node's
   log using level as the loglevel.  Only if the loglevel is set equal to
   or greater than <level> will it be shown in the log.  Text is a string
   of text which will have a datestamp added to it automatically.

     sysoplog(1, "Welcome to my Python script!")

 + New Python command "access(acsstring)" returns True or False if the user
   passes (has access) to the supplied <acsstring>:

     if access("s20"):
       writeln("User has a security level of 20 or higher!")
     else:
       writeln("User has less than 20 security.")

 + New Python command "rwrite(text)" writes text to the user with no line
   ending and no MCI or color code processing.

     rwrite("You |12will actually see the color code here");

 + New Python command "rwriteln(text)" writes text to the user with no MCI
   or color code processing, and moves to the next line after sending:

     rwriteln("Line one")
     rwriteln("Line two")

 + New Python function "upuser(seclevel)".  Updates the current user's security
   profile to <seclevel>, which includes access flags, time left, daily
   limits, etc.  Ex: upuser(50)

 + New Python function "wherex" returns the current X location of the cursor

 + New Python function "wherey" returns the current X location of the cursor

 + New Python function "textattr" returns the current text color attribute

 + New Python function "textcolor(attribute)" sets the current text color
   to <attribute> where attribute is calculated as (FG + BG) * 16 so white
   on a blue background would be 15 + 1 * 16 (or 31).

 + New Python function "getmgroup(number)" returns a dictionary of the message
   group at record number <number>.

 + New Python function "getmgroupid(number)" returns a dictionary of the
   message group with the ID of <number>.

 + New Python function "getfgroup(number)" returns a dictionary of the file
   group at record number <number>.

 + New Python function "getfgroupid(number)" returns a dictionary of the
   file group with the ID of <number>.

 + New Python function "getfbase(number)" returns a dictionary of the file
   base located at record number <number>

 + New Python function "getfbaseid(number)" returns a dictionary of the file
   base with the ID of <number>

 + MUTIL's MergeNodeList should no longer care about the casing of the file
   archives or the nodelists within those archives.  In otherwords, its now
   case insensitive even on case sensitive OSes.

 + Mystic BBS now has a built in text editor which will be expanded on as
   development continues.  Like all of Mystic's functions this is designed to
   work over any terminal connection and will be a work in progress.

 + Small revamp of the System configuration to add a "Networking" category
   as the Configuration column is getting cluttered and will be moreso as I
   add in several new options that are planned.

 + Configuration now allows many of Mystic's text-based control files to be
   edited within the configuration using the new text editor.

 ! Message and File group editors were not assigning a new Unique ID to the
   group when pasting.

 ! Fixed a bug during graphics detection in Linux where Mystic would still
   show ANSI codes until after the graphics prompt was displayed.

 + New Python function "mci2str(code)".  This function returns the value of
   an MCI code, where code is the two digit MCI code.  For example:

      writeln("User: " + mci2str("UH"));

 + New Python procedure "gotoxy(x,y)".  This locates the cursor to the X
   and Y position if the user has ANSI graphics.  If you supply a 0 for
   either value it will be replaced by the current cursor position.

 + When snap_new is enabled in the Index message reader, Mystic will now snap
   to a base with new messages after a CTRL+U.

 + Renamed the configuration themes to "3D ANSI" and "Shareware BBS" and
   updated the cfgroot1.ans file in DATA slightly.  If you want to have the
   Shareware BBS theme look as its intended, replace your old cfgroot1.ans
   with the updated one from a fresh installation.

 + Pre-alpha versions of Mystic are now compiled with full debugging
   information.  Binaries will create a <program name>.mem file in the
   directory where it exists which could help debugging if a crash occurs.

   As a result of this change, the size of the binary files will be huge in
   comparison up to around 10 times the normal size.  Alphas will still be
   compiled in "release" form.

 + MYSTIC.DAT and USERS.DAT are no longer linked together, so if they are
   separated the user number generator will not generate bogus numbers.  The
   downside is it will take longer to save a new user account.

 + MUTIL now has a function to sort files in file bases [FileSort] replacing
   the similar function in MBBSUTIL.  See the default mutil.ini for more
   sort options.  The sort only works for bases that contain up to 250,000
   files but this can be easily expanded if anyone ever hit that limit.

 + MBBSUTIL has been removed from Mystic BBS and should be deleted.

 + Mystic's text editor is now available in the System Configuration in the
   Other section and will allow loading and editing of any text file.  Keep
   in mind that it has some limitations.  Raw tabs will be converted to 8
   spaces, character 12 will be escaped and represented as ^L while character
   27 will be escaped as ^[.  Any occurance of these will be converted back
   upon saving, with the exception of raw tabs which will remain as spaces.

 + New command line option for mystic: -text <filename> while open the text
   editor from the command line.  If <filename> is supplied it will open that
   file otherwise it will create an empty buffer.  IE:

      mystic -text mytext.txt

 + All SysOp menu commands (that begin with a *) now have an optional data
   parameter "/nopw" which will tell Mystic not to ask for the SysOp password
   prior to executing the command.

 + EchoMail Node editor now uses a paged style form similar to the user editor
   instead of opening up various boxes.

 + New Menu command: *1 Edit text file.  This command's optional data should
   include a filename in which to edit.  If the file does not exist by default
   the editor will not execute.  The user cannot open any other text files
   unless the "/open" parameter is supplied.  If /open is passed then Mystic
   will start with an empty buffer if a filename is not given (or doesn't
   exist) and the user will be allowed to open any file on your drive as well

 ! Color editor and access flag editor were not using the configuration theme
   and instead were always using 3D ANSI.  This has been fixed.

 + Use Passive mode is now defaulted to Yes when creating new QWK Network and
   FTN BY FTN client.

 + Added two new Configuration themes: Mono Pink and Mono Blue.  You'll need
   to copy cfgroot2.and and cfgroot3.ans to your DATA directory from the DATA
   directory of a new installation.

 + New command line option for mystic: -ansi <filename> while open the ANSI
   editor from the command line.  If <filename> is supplied it will open that
   file otherwise it will create an empty buffer.  IE:

      mystic -ansi text\gj-glue1.ans

   The ANSI editor can load display files with color codes from PCBoard,
   Wildcat, Mystic's pipe codes, and ANSI.  The editor can save in ASCII or
   Pipe Code or ANSI and includes variable line length saving for ANSI files
   as well as some display options that can be set specifically to Mystic
   BBS.

 + Mystic's System Configuration > Other tab now has an "Text Editor" option
   which will open up the Text editor.

 + Mystic's System Configuration > Other tab now has an "ANSI Editor" option
   which will open up the ANSI editor

 + Mystic's Theme Editor now has a function for "Templates" which will open
   up a listing of all .ini files in that theme's text directory.  When one
   of those files is selected, Mystic will open its text editor.

 + Mystic's Theme Editor now has a function for "Display Files" which will
   open up a listing of all .a?? files in that theme's text directory.  When
   one is selected, Mystic will open its ANSI editor.

 + New Menu command: *2 Edit ANSI file.  This command's optional data should
   include a filename in which to edit.  If the file does not exist by default
   the editor will not execute.  The user cannot open any other ANSI files
   unless the "/open" parameter is supplied.  If /open is passed then Mystic
   will start with an empty buffer if a filename is not given (or doesn't
   exist) and the user will be allowed to open any file on your drive as well

 + The beginning of Echomail node security is here!  The easiest way to think
   about how this system works is to relate an Echomail node to the way
   security works for a user in your BBS.  Each node will have a security
   level, access flags, and can be a member of many Echomail groups (up to
   65000 echomail groups can be defined).

   Different functions throughout the echomail system will eventually have
   "Echo ACS" strings which work just like the user ACS strings that we're
   familiar with.  For example, you might have "Hatch File EACS" in a file base
   where you could say that you wanted only echomail nodes within a particular
   group to be able to hatch files, or a particular security level or access
   flag(s), or even by static echomail node ID.  For example:

      Hatch File EACS: g2|s255|fH|u10

   The above would say that any echomail node that is a member of Echomail
   group 2, OR any node that has a security level of 255 OR any Echomail node
   that has flag H can hatch files to that file base.  The Echomail node
   with the ID of #10 can also hatch.

   This is a very powerful system for managing an Echomail network, and EACS
   strings will be added to various functions in the future as seen fit.

 + New Python command: msg_delete(handle).  This deletes the current message
   as returned by msg_first or msg_next

 + Echomail Node editor will now check for any other active nodes with the
   same configured adddressed whenever it saves an echomail node.  If it finds
   a conflict it will pop up a message warning you of the conflict.

 + New ACS value: "OS" will be true if the user is connected by a secure
   connection to the BBS (ie SSH).

 ! Fixed a JAM file handle leak in the NNTP server.

   <ALPHA 1.12 A37 RELEASED -- Jan 1, 2018>

 ! Fixed an issue that caused MPL programs to crash

   <ALPHA 1.12 A38 RELEASED -- Jan 1, 2018>

 + New Python command: backspace (number, destructive).  This function sends
   (number) backspaces and if (destructive) is True, then it will also
   delete the character.  If False it will only move the cursor backwards.

 + Record data changes for user database:

     - First on and last on dates are now stored in Unix timestamp format.

     - Expire, last password change, and last e-mail validation dates now
       use julian day number

     - IP field extended to support IPV6, host extended to 80 characters

     - Vote tracking extended from 20 to 99

     - Added space for variable iteration PBKDF2-HMAC-SHA512 encrypted user
       passwords.

     - Added User country field for historical storage

     - Local QWK Path is now split into Local QWK Path and Local REP Path

 + Record data changes for message base database:

     - Expanded name to 60 characters

     - Removed Sponsor field

     - Added Read EchoACS and Post EchoACS

     - Created date changed from packed DOS to Unix timestamp format

 + Record data changes for file base database:

     - Extended name to 60 characters

     - Extended echotag to 40 characters

     - Added Passthrough EchoACS

     - Created date changed from packed DOS to Unix timestamp format

 + Record data changes for events database:

     - Added a unique ID to each event

     - Added OSType attribute to each event

     - Added new statistical tracking attributes

     - Removed Node number from BBS type event

     - Added field to support enhanced semaphore event system

 + Record data changes for servers database: Added more space for more server
   types and options.

 + Installation program will now question the installer at the beginning to
   help determine the local console codepage on Linux platforms.

 + Mystic message searching now allows full logical boolean searches along
   with order of operations.  The following tokens are used:

     & = AND
     | = OR
     ! = NOT

   Parentheses can be used to group results.  If you want to search for a
   single word or user you can still just type in the word, but otherwise
   you now have the options to do searching like:

      (g00r00 & released) | pre-alpha

   This would return any message that contained both g00r00" AND "released",
   OR it contained the word "pre-alpha"

   Searches are case insensitive and will search the From, To, Subject, and
   message content (excluding kludge lines).

 + New door command line code %C.  This is replaced by the user's current
   codepage as either "CP437" or "UTF8".

 + Mystic will now track the country detected during country blocking within
   each user's session.  A new MCI code "UO" will return the user's country
   of origin as determined by the country blocker in MIS.

 + Mystic's installation file install.exe can now be ran to copy over your
   binary files for you by command line:

     install replace <root Mystic path>

   Windows seems to be blocking this from running on my Windows test system
   for some reason, so I am looking into a way around whatever it is doing.
   You may need to rename it to something like "temp.exe" in Windows to get
   this to work :\

 + ANSI editor now has a "CRLF at EOF" which always defaults to Yes.  If this
   is Yes, Mystic will save a CRLF at the end of the ANSI file so that the
   cursor moves to the next line.  If No, then Mystic will not.

 + ANSI editor now shows a "File saved" confirmation box after saving.

 + ANSI editor now retains the changed filename between save dialog boxes

 + CTRL+X will now exit the ANSI editor, asking to save if the file has been
   changed first.

 + When in the full text and ANSI editors, the delete key will now allow files
   to be deleted within the Open file dialog box.

 ! Mystic was not properly handling MSGID fields created by Synchronet when
   replying to Echomail via Netmail

 ! Mystic will no longer refuse Netmails that use the Synchronet-style MSGID

 ! Bugfixes to ANSI editor save functions, particularly when saving without
   clear screen enabled.

 + New ANSI editor buffers will now default to saving with "Clear Screen Yes"

 ! FTP server was showing QWK packet when logged in as Anonymous

 + Mystic now has a new feature which can be enabled in the File Base Settings
   called "Download FTP".  When this is enabled to Yes, Mystic will ask the
   user if they'd like to download their queued files via an FTP link instead
   of using a file transfer protocol.

   The FTP link will contain a virtual directory that contains all of the
   files in their batch queue, and will expire after 1 hour.  The user can
   use their web browser or FTP client to connect to the FTP URL and list
   and download the files that they queued on the BBS.  Access enforcement
   and statistical tracking will be applied via the virtual FTP directory
   just as it would if the user was downloading the file from the BBS.

   This feature requires that Mystic's FTP server is enabled and properly
   configured, and that Anonymous FTP access is enabled in the Server
   settings.  This means proper firewall configuration and valid BBS domain

   Four new prompts will go along with this.  If you are using the default
   prompts you can simply copy over the default.txt to your data directory,
   but if you have modified the prompts then you'll need to add these new
   prompts into your default.txt and any other themes you use.  They are
   located in the upgrade.txt or the default.txt from a fresh installation.

   An HTTP equivalent will be enabled in a future build.

 + MIS now has a basic HTTP server.  The server can be created in the server
   editor within the configuration.  A webroot path must be defined, which
   points to a directory where your website files and configuration will
   exist.  For example, if you set webroot to c:\mystic\webroot\ then you
   will need to create two subdirectories under it (cfg and www):

      c:\mystic\webroot\cfg\
      c:\mystic\webroot\www\

   In the www folder will be where you place your website files.  The CFG
   folder will hold various configuration values for the web server in the
   future.  Note this is a very barebones server at this point only really
   capable of serving basic websites, but I intend to work on it further as
   I find time.

 + ANSI editor now has block options.  CTRL+B can be used to select a block
   of text to be centered on.

 + ANSI editor now has a block option for filling a block with a character,
   an attribute or both.

 + ANSI editor now has a block option to select a block and center text found
   within the selected block (using the center of the selected block as the
   center point)

 + Event system will now recalcuate the event state every 10 seconds, this
   has been increased from 5 seconds in order to reduce load of an updated
   semaphore system

 + The "Semaphore" event system has been enhanced to allow specifying boolean
   logic of semaphore files that must exist (or not) to trigger an event. A
   new field has been added to define which semaphore files should be removed
   when the event is ran.  The usual boolean evaluation tokens that are used
   in ACS, message searching, etc, all apply here as well: () to define order,
   !=NOT, &=AND |=OR.   An example usage might be:

      Event Type: Semaphore
       Semaphore: (echomail.in|netmail.in)!fidopoll.bsy
      Kill After: echomail.in|netmail.in

   The above example says to trigger the event if echomail.in OR netmail.in
   exists but NOT if fidopoll.bsy exists.  The result would be that the
   command line would run when there is incoming net/echomail but it'd also
   wait for fidopoll to finish running (if it is) before kicking off.

   The Kill After field says that when it runs it should delete echomail.in
   and netmail.in.  Each file specified here should be separated by a pipe
   character (|).

   For existing systems, the upgrade program will automatically populate the
   "Kill after" field with the currently configured semaphores but for new
   events you'll now need to define which semaphores to delete when it runs.

 + Semaphore events will now delete the semaphore files when it executes
   instead of at the time the semaphores are detected.

 + Semaphore events now dynamically update their "run state" until the point
   in which they execute.  This means that if a semaphore event triggers but
   another event is running which causes it to be flagged "Run next", it will
   continue to evaluate the semaphore files up until the moment it runs. If
   the state of those semaphores changes between being flagged as Run Next and
   actually executing, the event will detect it and adjust itself accordingly.

 ! Fixed a bug in the socket code that could sometimes cause a lost connection
   to not be detected if it happens while sending data to the client.  This
   could be a major cause for those who've had some "ghost node" issues.

 ! Who's Online was not pausing when the BBS had enough nodes to fill up
   multiple pages.

 + NodeSpy now has an option to connect via IPV4, IPV6, or to default to
   either V4/V6 and then fallback to using the other if it cannot resolve
   the address.

 + Echomail nodes can now be configured to default to resolving via IPV4 or
   V6, with a fallback to the other one if the address cannot be resolved.

 + FidoPoll will now attempt to use IPV6 if it is available and then fallback
   to IPV4 when connecting to unsecure nodelist via a nodelist lookup.

 + MIS event status will now display the date and time when the event was
   last executed as well as the last result returned from execution.  If you
   are a A39 pre-alpha tester, note that any events you've created in the
   Event editor with A39 may have to be recreated for this tracking to work
   because the "Event ID" was always getting set to 0 in earlier builds.

 + SENDMAIL now has an IPType similar to those added to Fidopoll, echomail
   nodes, Nodespy, etc.

 ! Mystic BINKP should no longer fail CRAM-MD5 negotiations when a BINKP
   option is listed after the CRAM-MD5 handshake in the options frame.

 + Mystic FIDOPOLL FTP send functions will now log FTP session data to the
   log file, similar to what it does with BINKP.

 + Mystic FIDOPOLL FTP will now automatically prepend a / to a directory if   it is not configured in Mystic's echomail node configuration with a slash
   it is not configured in Mystic's echomail node configuration with a /

 + QWKPOLL will now log to "qwkpoll.log" in the log files directory.

 + QWKPOLL will now log all FTP client/server exchanges in qwkpoll.log

 + MIS will now attempt to detect any ghost nodes and will reset the node
   data under many different circumstances.  If this happens, it will be
   logged in mis.log with an explaination as to why it was assumed to be
   a ghost node.  This combined with other recent stability improvements
   should help quite a bit with long term uptime of the terminal nodes and
   servers.

 + Echomail node configuration: Echomail node address input now is a single
   input instead of splitting out zone, net, node and point into their own
   fields.  This is done to make a little more room on the form for other
   options.

 + Echomail node configuration: Nodes now have a "SysOp Name" field.

 + Mystic Python has a new function: Delay (milliseconds) causes the problem
   to wait for a specific number of milliseconds.

 + All Mystic executables will now either display the compiled version
   date/time or have a -ver/-version option to do the same.

 + New menu command: MF (View draft message posts).  This command allows
   users to view and resume any saved draft message posts.  If the user
   has no drafts a simple message will be printed saying there are no
   saved drafts.

   Drafts are automatically saved when a user runs out of time, gets
   disconnected for inactivity or loses/drops connection in the middle of
   posting or while replying to a message.  If Mystic has any sort of error
   while saving the message, it will also creat a draft of the message for
   the user.

   If the optional data of /SCAN is supplied, Mystic will check to see if
   there are any drafts, and prompt the user if they would like to
   review their saved drafts ONLY if they have drafts.  If they do not do
   drafts, the command will simply do nothing.  Ideally you could put this
   somewhere during your login process, as the new default install does in
   prelogin.mnu

   Six new prompts (532-537) go along with this. If you are using the default
   prompts you can simply copy over the default.txt to your data directory,
   but if you have modified the prompts then you'll need to add these new
   prompts into your default.txt and any other themes you use.  They are
   located in the upgrade.txt or the default.txt from a fresh installation.

 + New ACS command "OD" returns TRUE if the user has any draft message posts
   saved.

 + New MCI code "MF" shows the number of draft messages saved for the current
   user.

 + Posting a message now no longer enforces group requirements when evaluating
   the "PostACS"

 + The message editor now has a "Save as draft" option from the command menu.
   This means you will need to add that command to the menu if you use a
   custom template for your message editor, otherwise replace msg_editor.ini
   with the newer one from the installation.

   See upgrade.txt for instructions on adding the command or use the default
   msg_editor.ini as a guideline.

 + Two new Python functions: pwrite and pwriteln.  These work just like the
   write/writeln or rwrite/rwriteln except they only resolve pipe color codes
   and not all MCI codes.

 + Echomail ACS is active.  Note: YOU MUST BE USING MUTIL TO PROCESS ECHOMAIL
   AND .TIC FOR THIS SYSTEM TO WORK.  Mystic cannot apply security to third
   party tossers.

   This system is just like User access system except that it applies to
   echomail nodes.  Each echomail node has its own security level, group
   memberships (to echomail groups) and a set of acess flags.  The following
   commands are available within EACS:

      s<level>  : Echomail node must have a Security Level greater than or
                  equal to <level>
      g<number> : Echomail node must be a member of Echomail group ID equal
                  to <number>
      f<flag>   : Echomail node must have flag <flag> which is a letter
                  between A to Z.
      u<number> : Echomail node must have a unique ID of <number>.  This
                  allows security to be applied to specific nodes (ID is
                  shown in echomail node editor).

   Just like user ACS, Echomail ACS can also use parenthesis and boolean
   evaulation.

 + Echomail ACS has been activated for message base subscribing/reading. A
   new field in each Message base configuration called "List EACS" defines
   the ACS requires for an echommail node to be able to see, subscribe, or
   unsubscribe to the area via AreaFix

   Hubs can still manually link a base to a node regardless of security, so
   for example if you wanted to force nodes to always carry a specific echo
   area, you would give them the base and then set the "List EACS" to an
   access they do not have (or even use % which is "never" in ACS terms). With
   this setup in place, the node cannot add or remove the area, they can only
   perform rescans.

 ! When hatching/tossing files, MUTIL will now properly randomly generate a
   random 8 letter .tic filename if one already exists of the same name as
   the archive.

 + The FU (File upload) menu command now has a new optional data command
   called "/current".  If this option is specified, Mystic will attempt
   to upload to the current file base even if a specific file base has been
   configured for uploads.

 + The GH and GI (Goodbye and Hang up Immediately) menu commands have a new
   optional data option.  If "/RECYCLE" supplied, Mystic will log the current
   user out and restart the session as if the user just connected to the BBS.

 + The XL (Matrix Login) command now as a new optional data option.  If /FULL
   is supplied, the typical Matrix login will be immediately skipped and the
   user will be presented the standard login process.  This is intended to
   allow people to use the Matrix login for things other than a Matrix-style
   log in.

 + MUTIL [ImportEchoMail] now has a new option: default_rescan.  This option
   allows the SysOp to define the default parameters used when a downlink
   requests a %RESCAN on all message bases.  In the past this defaulted to
   "R=250".  MUTIL will continue to default to that value if it is not defined
   in the .ini file, otherwise it will adopt whatever is defined.  Be sure to
   define a valid command otherwise RESCAN will not work.  See the default
   MUTIL.INI for more information.

 + MUTIL now has a new option under the [General] section: "logcache".  This
   can be a true or false value.  If true, MUTIL will cache the log file
   meaning it will write the log file in chunks of "8KB" instead of every
   line being written.  This is the default and HIGHLY recommended setting for
   MUTIL. If set to false, MUTIL will physically open the log file and write
   each individual log line to the file and then close it.  Setting this to
   false will most likely significantly reduce performance.

 + Mystic AREA/FILEFIX wasn't properly reporting +1 to Netmail when processing
   a request.

 ! Fixed a bug in Areafix RESCAN when using the R= command, caused by changes
   to my JAM code back when I was optimizing the statistical calculation for
   the Index reader.

 + New MPL function DateUnix returns the current date/time in Unix format

 + New MPL function DateU2D (unixdate): Converts <unixdate> to a DOS date

 + New MPL function DateD2U (dosdate): Converts <dosdate> to a Unix date

 + AreaFix responses now list the message base name along with the echotag

 + AreaFix rescans now show the total messages exported

 + AreaFix %LIST command now has an option parameter to perform boolean
   capable searches on the echotag and message base name.  These work just
   like msg searches with parenthesis (&)AND (|) OR (!) NOT functionality:

      %LIST BBS            - List areas that contains "BBS"
      %LIST BBS!Renegade   - List areas that contains "BBS" but not "Renegade"

 + AreaFix now has a "%ALL" command.  Using "%ALL" or "%+ALL" will add all
   areas the node has access to.  Using "%-ALL" will remove all nodes the
   area has access to.  The command has an option second parameter which will
   perform a boolean capable search on the echotag and message base name:

      %ALL                 - Add all bases the node has access to (but not
                             subbed)
      %-ALL                - Remove all bases the node has subscribed to
      %ALL BBS!Renegade    - Add all that contain "BBS" but not "Renegade" in
                             the echotag or base name
      %-ALL BBS!Renegade   - Remove all bases that contain "BBS" but not
                             "Renegade" in the echotag or base name

 + File Bases now have an "List EACS".  This Echomail ACS works identically
   to the Message Base version, allowing hubs to define which nodes have
   access to list, subscribe, and receive get files from an echoed file base

 + FileFix %LIST function now has an optional second parameter to perform
   boolean searches in the same was as Areafix.

 + FileFix now has an %ALL function that mimics the functionality of the
   Areafix equivalent.
